// ignore_for_file: non_constant_identifier_names, camel_case_types, file_namesimport, file_names, unnecessary_null_comparison, prefer_null_aware_operators
// WARNING: This code is auto-generated by Supadart.
// WARNING: Modifications may be overwritten. Please make changes in the Supadart configuration.
import 'supadart_header.dart';

class ProfileCategoriesDetailed
    implements SupadartClass<ProfileCategoriesDetailed> {
  final String? id;
  final String? userId;
  final String? categoryId;
  final bool? isFavorite;
  final bool? isShortcut;
  final int? progress;
  final DateTime? lastCheckinAt;
  final int? checkinCount;
  final DateTime? createdAt;
  final DateTime? updatedAt;
  final int? totalCheckins;
  final num? averageWellnessLevel;
  final String? categoryName;
  final String? categoryNameShort;
  final String? categoryDescription;
  final String? categoryIcon;
  final String? primaryColor;
  final String? secondaryColor;
  final bool? checkinEnabled;
  final int? maxQuestions;

  const ProfileCategoriesDetailed({
    this.id,
    this.userId,
    this.categoryId,
    this.isFavorite,
    this.isShortcut,
    this.progress,
    this.lastCheckinAt,
    this.checkinCount,
    this.createdAt,
    this.updatedAt,
    this.totalCheckins,
    this.averageWellnessLevel,
    this.categoryName,
    this.categoryNameShort,
    this.categoryDescription,
    this.categoryIcon,
    this.primaryColor,
    this.secondaryColor,
    this.checkinEnabled,
    this.maxQuestions,
  });

  static String get table_name => 'profile_categories_detailed';
  static String get c_id => 'id';
  static String get c_userId => 'user_id';
  static String get c_categoryId => 'category_id';
  static String get c_isFavorite => 'is_favorite';
  static String get c_isShortcut => 'is_shortcut';
  static String get c_progress => 'progress';
  static String get c_lastCheckinAt => 'last_checkin_at';
  static String get c_checkinCount => 'checkin_count';
  static String get c_createdAt => 'created_at';
  static String get c_updatedAt => 'updated_at';
  static String get c_totalCheckins => 'total_checkins';
  static String get c_averageWellnessLevel => 'average_wellness_level';
  static String get c_categoryName => 'category_name';
  static String get c_categoryNameShort => 'category_name_short';
  static String get c_categoryDescription => 'category_description';
  static String get c_categoryIcon => 'category_icon';
  static String get c_primaryColor => 'primary_color';
  static String get c_secondaryColor => 'secondary_color';
  static String get c_checkinEnabled => 'checkin_enabled';
  static String get c_maxQuestions => 'max_questions';

  static List<ProfileCategoriesDetailed> converter(
      List<Map<String, dynamic>> data) {
    return data.map(ProfileCategoriesDetailed.fromJson).toList();
  }

  static ProfileCategoriesDetailed converterSingle(Map<String, dynamic> data) {
    return ProfileCategoriesDetailed.fromJson(data);
  }

  static Map<String, dynamic> _generateMap({
    String? id,
    String? userId,
    String? categoryId,
    bool? isFavorite,
    bool? isShortcut,
    int? progress,
    DateTime? lastCheckinAt,
    int? checkinCount,
    DateTime? createdAt,
    DateTime? updatedAt,
    int? totalCheckins,
    num? averageWellnessLevel,
    String? categoryName,
    String? categoryNameShort,
    String? categoryDescription,
    String? categoryIcon,
    String? primaryColor,
    String? secondaryColor,
    bool? checkinEnabled,
    int? maxQuestions,
  }) {
    return {
      if (id != null) 'id': id,
      if (userId != null) 'user_id': userId,
      if (categoryId != null) 'category_id': categoryId,
      if (isFavorite != null) 'is_favorite': isFavorite,
      if (isShortcut != null) 'is_shortcut': isShortcut,
      if (progress != null) 'progress': progress,
      if (lastCheckinAt != null)
        'last_checkin_at': lastCheckinAt.toUtc().toIso8601String(),
      if (checkinCount != null) 'checkin_count': checkinCount,
      if (createdAt != null) 'created_at': createdAt.toUtc().toIso8601String(),
      if (updatedAt != null) 'updated_at': updatedAt.toUtc().toIso8601String(),
      if (totalCheckins != null) 'total_checkins': totalCheckins,
      if (averageWellnessLevel != null)
        'average_wellness_level': averageWellnessLevel.toString(),
      if (categoryName != null) 'category_name': categoryName,
      if (categoryNameShort != null) 'category_name_short': categoryNameShort,
      if (categoryDescription != null)
        'category_description': categoryDescription,
      if (categoryIcon != null) 'category_icon': categoryIcon,
      if (primaryColor != null) 'primary_color': primaryColor,
      if (secondaryColor != null) 'secondary_color': secondaryColor,
      if (checkinEnabled != null) 'checkin_enabled': checkinEnabled,
      if (maxQuestions != null) 'max_questions': maxQuestions,
    };
  }

  static Map<String, dynamic> insert({
    String? id,
    String? userId,
    String? categoryId,
    bool? isFavorite,
    bool? isShortcut,
    int? progress,
    DateTime? lastCheckinAt,
    int? checkinCount,
    DateTime? createdAt,
    DateTime? updatedAt,
    int? totalCheckins,
    num? averageWellnessLevel,
    String? categoryName,
    String? categoryNameShort,
    String? categoryDescription,
    String? categoryIcon,
    String? primaryColor,
    String? secondaryColor,
    bool? checkinEnabled,
    int? maxQuestions,
  }) {
    return _generateMap(
      id: id,
      userId: userId,
      categoryId: categoryId,
      isFavorite: isFavorite,
      isShortcut: isShortcut,
      progress: progress,
      lastCheckinAt: lastCheckinAt,
      checkinCount: checkinCount,
      createdAt: createdAt,
      updatedAt: updatedAt,
      totalCheckins: totalCheckins,
      averageWellnessLevel: averageWellnessLevel,
      categoryName: categoryName,
      categoryNameShort: categoryNameShort,
      categoryDescription: categoryDescription,
      categoryIcon: categoryIcon,
      primaryColor: primaryColor,
      secondaryColor: secondaryColor,
      checkinEnabled: checkinEnabled,
      maxQuestions: maxQuestions,
    );
  }

  static Map<String, dynamic> update({
    String? id,
    String? userId,
    String? categoryId,
    bool? isFavorite,
    bool? isShortcut,
    int? progress,
    DateTime? lastCheckinAt,
    int? checkinCount,
    DateTime? createdAt,
    DateTime? updatedAt,
    int? totalCheckins,
    num? averageWellnessLevel,
    String? categoryName,
    String? categoryNameShort,
    String? categoryDescription,
    String? categoryIcon,
    String? primaryColor,
    String? secondaryColor,
    bool? checkinEnabled,
    int? maxQuestions,
  }) {
    return _generateMap(
      id: id,
      userId: userId,
      categoryId: categoryId,
      isFavorite: isFavorite,
      isShortcut: isShortcut,
      progress: progress,
      lastCheckinAt: lastCheckinAt,
      checkinCount: checkinCount,
      createdAt: createdAt,
      updatedAt: updatedAt,
      totalCheckins: totalCheckins,
      averageWellnessLevel: averageWellnessLevel,
      categoryName: categoryName,
      categoryNameShort: categoryNameShort,
      categoryDescription: categoryDescription,
      categoryIcon: categoryIcon,
      primaryColor: primaryColor,
      secondaryColor: secondaryColor,
      checkinEnabled: checkinEnabled,
      maxQuestions: maxQuestions,
    );
  }

  factory ProfileCategoriesDetailed.fromJson(Map<String, dynamic> jsonn) {
    return ProfileCategoriesDetailed(
      id: jsonn['id'] != null ? jsonn['id'].toString() : null,
      userId: jsonn['user_id'] != null ? jsonn['user_id'].toString() : null,
      categoryId:
          jsonn['category_id'] != null ? jsonn['category_id'].toString() : null,
      isFavorite:
          jsonn['is_favorite'] != null ? jsonn['is_favorite'] as bool : null,
      isShortcut:
          jsonn['is_shortcut'] != null ? jsonn['is_shortcut'] as bool : null,
      progress: jsonn['progress'] != null
          ? int.parse(jsonn['progress'].toString())
          : null,
      lastCheckinAt: jsonn['last_checkin_at'] != null
          ? DateTime.parse(jsonn['last_checkin_at'].toString())
          : null,
      checkinCount: jsonn['checkin_count'] != null
          ? int.parse(jsonn['checkin_count'].toString())
          : null,
      createdAt: jsonn['created_at'] != null
          ? DateTime.parse(jsonn['created_at'].toString())
          : null,
      updatedAt: jsonn['updated_at'] != null
          ? DateTime.parse(jsonn['updated_at'].toString())
          : null,
      totalCheckins: jsonn['total_checkins'] != null
          ? int.parse(jsonn['total_checkins'].toString())
          : null,
      averageWellnessLevel: jsonn['average_wellness_level'] != null
          ? num.parse(jsonn['average_wellness_level'].toString())
          : null,
      categoryName: jsonn['category_name'] != null
          ? jsonn['category_name'].toString()
          : null,
      categoryNameShort: jsonn['category_name_short'] != null
          ? jsonn['category_name_short'].toString()
          : null,
      categoryDescription: jsonn['category_description'] != null
          ? jsonn['category_description'].toString()
          : null,
      categoryIcon: jsonn['category_icon'] != null
          ? jsonn['category_icon'].toString()
          : null,
      primaryColor: jsonn['primary_color'] != null
          ? jsonn['primary_color'].toString()
          : null,
      secondaryColor: jsonn['secondary_color'] != null
          ? jsonn['secondary_color'].toString()
          : null,
      checkinEnabled: jsonn['checkin_enabled'] != null
          ? jsonn['checkin_enabled'] as bool
          : null,
      maxQuestions: jsonn['max_questions'] != null
          ? int.parse(jsonn['max_questions'].toString())
          : null,
    );
  }

  static Object New({
    String? id,
    String? userId,
    String? categoryId,
    bool? isFavorite,
    bool? isShortcut,
    int? progress,
    DateTime? lastCheckinAt,
    int? checkinCount,
    DateTime? createdAt,
    DateTime? updatedAt,
    int? totalCheckins,
    num? averageWellnessLevel,
    String? categoryName,
    String? categoryNameShort,
    String? categoryDescription,
    String? categoryIcon,
    String? primaryColor,
    String? secondaryColor,
    bool? checkinEnabled,
    int? maxQuestions,
  }) {
    return {
      if (id != null) 'id': id,
      if (userId != null) 'user_id': userId,
      if (categoryId != null) 'category_id': categoryId,
      if (isFavorite != null) 'is_favorite': isFavorite,
      if (isShortcut != null) 'is_shortcut': isShortcut,
      if (progress != null) 'progress': progress,
      if (lastCheckinAt != null) 'last_checkin_at': lastCheckinAt,
      if (checkinCount != null) 'checkin_count': checkinCount,
      if (createdAt != null) 'created_at': createdAt,
      if (updatedAt != null) 'updated_at': updatedAt,
      if (totalCheckins != null) 'total_checkins': totalCheckins,
      if (averageWellnessLevel != null)
        'average_wellness_level': averageWellnessLevel,
      if (categoryName != null) 'category_name': categoryName,
      if (categoryNameShort != null) 'category_name_short': categoryNameShort,
      if (categoryDescription != null)
        'category_description': categoryDescription,
      if (categoryIcon != null) 'category_icon': categoryIcon,
      if (primaryColor != null) 'primary_color': primaryColor,
      if (secondaryColor != null) 'secondary_color': secondaryColor,
      if (checkinEnabled != null) 'checkin_enabled': checkinEnabled,
      if (maxQuestions != null) 'max_questions': maxQuestions,
    };
  }

  Map<String, dynamic> toJson() {
    return _generateMap(
      id: id,
      userId: userId,
      categoryId: categoryId,
      isFavorite: isFavorite,
      isShortcut: isShortcut,
      progress: progress,
      lastCheckinAt: lastCheckinAt,
      checkinCount: checkinCount,
      createdAt: createdAt,
      updatedAt: updatedAt,
      totalCheckins: totalCheckins,
      averageWellnessLevel: averageWellnessLevel,
      categoryName: categoryName,
      categoryNameShort: categoryNameShort,
      categoryDescription: categoryDescription,
      categoryIcon: categoryIcon,
      primaryColor: primaryColor,
      secondaryColor: secondaryColor,
      checkinEnabled: checkinEnabled,
      maxQuestions: maxQuestions,
    );
  }

  static const _unset = Object();
  ProfileCategoriesDetailed copyWith({
    Object? id = _unset,
    Object? userId = _unset,
    Object? categoryId = _unset,
    Object? isFavorite = _unset,
    Object? isShortcut = _unset,
    Object? progress = _unset,
    Object? lastCheckinAt = _unset,
    Object? checkinCount = _unset,
    Object? createdAt = _unset,
    Object? updatedAt = _unset,
    Object? totalCheckins = _unset,
    Object? averageWellnessLevel = _unset,
    Object? categoryName = _unset,
    Object? categoryNameShort = _unset,
    Object? categoryDescription = _unset,
    Object? categoryIcon = _unset,
    Object? primaryColor = _unset,
    Object? secondaryColor = _unset,
    Object? checkinEnabled = _unset,
    Object? maxQuestions = _unset,
  }) {
    return ProfileCategoriesDetailed(
      id: id == _unset ? this.id : id as String?,
      userId: userId == _unset ? this.userId : userId as String?,
      categoryId:
          categoryId == _unset ? this.categoryId : categoryId as String?,
      isFavorite: isFavorite == _unset ? this.isFavorite : isFavorite as bool?,
      isShortcut: isShortcut == _unset ? this.isShortcut : isShortcut as bool?,
      progress: progress == _unset ? this.progress : progress as int?,
      lastCheckinAt: lastCheckinAt == _unset
          ? this.lastCheckinAt
          : lastCheckinAt as DateTime?,
      checkinCount:
          checkinCount == _unset ? this.checkinCount : checkinCount as int?,
      createdAt: createdAt == _unset ? this.createdAt : createdAt as DateTime?,
      updatedAt: updatedAt == _unset ? this.updatedAt : updatedAt as DateTime?,
      totalCheckins:
          totalCheckins == _unset ? this.totalCheckins : totalCheckins as int?,
      averageWellnessLevel: averageWellnessLevel == _unset
          ? this.averageWellnessLevel
          : averageWellnessLevel as num?,
      categoryName:
          categoryName == _unset ? this.categoryName : categoryName as String?,
      categoryNameShort: categoryNameShort == _unset
          ? this.categoryNameShort
          : categoryNameShort as String?,
      categoryDescription: categoryDescription == _unset
          ? this.categoryDescription
          : categoryDescription as String?,
      categoryIcon:
          categoryIcon == _unset ? this.categoryIcon : categoryIcon as String?,
      primaryColor:
          primaryColor == _unset ? this.primaryColor : primaryColor as String?,
      secondaryColor: secondaryColor == _unset
          ? this.secondaryColor
          : secondaryColor as String?,
      checkinEnabled: checkinEnabled == _unset
          ? this.checkinEnabled
          : checkinEnabled as bool?,
      maxQuestions:
          maxQuestions == _unset ? this.maxQuestions : maxQuestions as int?,
    );
  }
}
