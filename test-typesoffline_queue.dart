// ignore_for_file: non_constant_identifier_names, camel_case_types, file_namesimport, file_names, unnecessary_null_comparison, prefer_null_aware_operators
// WARNING: This code is auto-generated by Supadart.
// WARNING: Modifications may be overwritten. Please make changes in the Supadart configuration.
import 'supadart_header.dart';

class OfflineQueue implements SupadartClass<OfflineQueue> {
  final String id;
  final String? userId;
  final String operationType;
  final Map<String, dynamic> payload;
  final String status;
  final int? retryCount;
  final String? errorMessage;
  final DateTime? createdAt;
  final DateTime? updatedAt;

  const OfflineQueue({
    required this.id,
    this.userId,
    required this.operationType,
    required this.payload,
    required this.status,
    this.retryCount,
    this.errorMessage,
    this.createdAt,
    this.updatedAt,
  });

  static String get table_name => 'offline_queue';
  static String get c_id => 'id';
  static String get c_userId => 'user_id';
  static String get c_operationType => 'operation_type';
  static String get c_payload => 'payload';
  static String get c_status => 'status';
  static String get c_retryCount => 'retry_count';
  static String get c_errorMessage => 'error_message';
  static String get c_createdAt => 'created_at';
  static String get c_updatedAt => 'updated_at';

  static List<OfflineQueue> converter(List<Map<String, dynamic>> data) {
    return data.map(OfflineQueue.fromJson).toList();
  }

  static OfflineQueue converterSingle(Map<String, dynamic> data) {
    return OfflineQueue.fromJson(data);
  }

  static Map<String, dynamic> _generateMap({
    String? id,
    String? userId,
    String? operationType,
    Map<String, dynamic>? payload,
    String? status,
    int? retryCount,
    String? errorMessage,
    DateTime? createdAt,
    DateTime? updatedAt,
  }) {
    return {
      if (id != null) 'id': id,
      if (userId != null) 'user_id': userId,
      if (operationType != null) 'operation_type': operationType,
      if (payload != null) 'payload': payload,
      if (status != null) 'status': status,
      if (retryCount != null) 'retry_count': retryCount,
      if (errorMessage != null) 'error_message': errorMessage,
      if (createdAt != null) 'created_at': createdAt.toUtc().toIso8601String(),
      if (updatedAt != null) 'updated_at': updatedAt.toUtc().toIso8601String(),
    };
  }

  static Map<String, dynamic> insert({
    String? id,
    String? userId,
    required String operationType,
    required Map<String, dynamic> payload,
    String? status,
    int? retryCount,
    String? errorMessage,
    DateTime? createdAt,
    DateTime? updatedAt,
  }) {
    return _generateMap(
      id: id,
      userId: userId,
      operationType: operationType,
      payload: payload,
      status: status,
      retryCount: retryCount,
      errorMessage: errorMessage,
      createdAt: createdAt,
      updatedAt: updatedAt,
    );
  }

  static Map<String, dynamic> update({
    String? id,
    String? userId,
    String? operationType,
    Map<String, dynamic>? payload,
    String? status,
    int? retryCount,
    String? errorMessage,
    DateTime? createdAt,
    DateTime? updatedAt,
  }) {
    return _generateMap(
      id: id,
      userId: userId,
      operationType: operationType,
      payload: payload,
      status: status,
      retryCount: retryCount,
      errorMessage: errorMessage,
      createdAt: createdAt,
      updatedAt: updatedAt,
    );
  }

  factory OfflineQueue.fromJson(Map<String, dynamic> jsonn) {
    return OfflineQueue(
      id: jsonn['id'] != null ? jsonn['id'].toString() : '',
      userId: jsonn['user_id'] != null ? jsonn['user_id'].toString() : null,
      operationType: jsonn['operation_type'] != null
          ? jsonn['operation_type'].toString()
          : '',
      payload: jsonn['payload'] != null
          ? jsonn['payload'] as Map<String, dynamic>
          : <String, dynamic>{},
      status: jsonn['status'] != null ? jsonn['status'].toString() : '',
      retryCount: jsonn['retry_count'] != null
          ? int.parse(jsonn['retry_count'].toString())
          : null,
      errorMessage: jsonn['error_message'] != null
          ? jsonn['error_message'].toString()
          : null,
      createdAt: jsonn['created_at'] != null
          ? DateTime.parse(jsonn['created_at'].toString())
          : null,
      updatedAt: jsonn['updated_at'] != null
          ? DateTime.parse(jsonn['updated_at'].toString())
          : null,
    );
  }

  static Object New({
    String? id,
    String? userId,
    String? operationType,
    Map<String, dynamic>? payload,
    String? status,
    int? retryCount,
    String? errorMessage,
    DateTime? createdAt,
    DateTime? updatedAt,
  }) {
    return {
      if (id != null) 'id': id,
      if (userId != null) 'user_id': userId,
      if (operationType != null) 'operation_type': operationType,
      if (payload != null) 'payload': payload,
      if (status != null) 'status': status,
      if (retryCount != null) 'retry_count': retryCount,
      if (errorMessage != null) 'error_message': errorMessage,
      if (createdAt != null) 'created_at': createdAt,
      if (updatedAt != null) 'updated_at': updatedAt,
    };
  }

  Map<String, dynamic> toJson() {
    return _generateMap(
      id: id,
      userId: userId,
      operationType: operationType,
      payload: payload,
      status: status,
      retryCount: retryCount,
      errorMessage: errorMessage,
      createdAt: createdAt,
      updatedAt: updatedAt,
    );
  }

  static const _unset = Object();
  OfflineQueue copyWith({
    Object? id = _unset,
    Object? userId = _unset,
    Object? operationType = _unset,
    Object? payload = _unset,
    Object? status = _unset,
    Object? retryCount = _unset,
    Object? errorMessage = _unset,
    Object? createdAt = _unset,
    Object? updatedAt = _unset,
  }) {
    return OfflineQueue(
      id: id == _unset ? this.id : id as String,
      userId: userId == _unset ? this.userId : userId as String?,
      operationType: operationType == _unset
          ? this.operationType
          : operationType as String,
      payload:
          payload == _unset ? this.payload : payload as Map<String, dynamic>,
      status: status == _unset ? this.status : status as String,
      retryCount: retryCount == _unset ? this.retryCount : retryCount as int?,
      errorMessage:
          errorMessage == _unset ? this.errorMessage : errorMessage as String?,
      createdAt: createdAt == _unset ? this.createdAt : createdAt as DateTime?,
      updatedAt: updatedAt == _unset ? this.updatedAt : updatedAt as DateTime?,
    );
  }
}
