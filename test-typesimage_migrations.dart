// ignore_for_file: non_constant_identifier_names, camel_case_types, file_namesimport, file_names, unnecessary_null_comparison, prefer_null_aware_operators
// WARNING: This code is auto-generated by Supadart.
// WARNING: Modifications may be overwritten. Please make changes in the Supadart configuration.
import 'supadart_header.dart';

class ImageMigrations implements SupadartClass<ImageMigrations> {
  final String id;
  final int? oldImageId;
  final String newUrl;
  final String bucket;
  final String path;
  final DateTime? migratedAt;

  const ImageMigrations({
    required this.id,
    this.oldImageId,
    required this.newUrl,
    required this.bucket,
    required this.path,
    this.migratedAt,
  });

  static String get table_name => 'image_migrations';
  static String get c_id => 'id';
  static String get c_oldImageId => 'old_image_id';
  static String get c_newUrl => 'new_url';
  static String get c_bucket => 'bucket';
  static String get c_path => 'path';
  static String get c_migratedAt => 'migrated_at';

  static List<ImageMigrations> converter(List<Map<String, dynamic>> data) {
    return data.map(ImageMigrations.fromJson).toList();
  }

  static ImageMigrations converterSingle(Map<String, dynamic> data) {
    return ImageMigrations.fromJson(data);
  }

  static Map<String, dynamic> _generateMap({
    String? id,
    int? oldImageId,
    String? newUrl,
    String? bucket,
    String? path,
    DateTime? migratedAt,
  }) {
    return {
      if (id != null) 'id': id,
      if (oldImageId != null) 'old_image_id': oldImageId,
      if (newUrl != null) 'new_url': newUrl,
      if (bucket != null) 'bucket': bucket,
      if (path != null) 'path': path,
      if (migratedAt != null)
        'migrated_at': migratedAt.toUtc().toIso8601String(),
    };
  }

  static Map<String, dynamic> insert({
    String? id,
    int? oldImageId,
    required String newUrl,
    required String bucket,
    required String path,
    DateTime? migratedAt,
  }) {
    return _generateMap(
      id: id,
      oldImageId: oldImageId,
      newUrl: newUrl,
      bucket: bucket,
      path: path,
      migratedAt: migratedAt,
    );
  }

  static Map<String, dynamic> update({
    String? id,
    int? oldImageId,
    String? newUrl,
    String? bucket,
    String? path,
    DateTime? migratedAt,
  }) {
    return _generateMap(
      id: id,
      oldImageId: oldImageId,
      newUrl: newUrl,
      bucket: bucket,
      path: path,
      migratedAt: migratedAt,
    );
  }

  factory ImageMigrations.fromJson(Map<String, dynamic> jsonn) {
    return ImageMigrations(
      id: jsonn['id'] != null ? jsonn['id'].toString() : '',
      oldImageId: jsonn['old_image_id'] != null
          ? int.parse(jsonn['old_image_id'].toString())
          : null,
      newUrl: jsonn['new_url'] != null ? jsonn['new_url'].toString() : '',
      bucket: jsonn['bucket'] != null ? jsonn['bucket'].toString() : '',
      path: jsonn['path'] != null ? jsonn['path'].toString() : '',
      migratedAt: jsonn['migrated_at'] != null
          ? DateTime.parse(jsonn['migrated_at'].toString())
          : null,
    );
  }

  static Object New({
    String? id,
    int? oldImageId,
    String? newUrl,
    String? bucket,
    String? path,
    DateTime? migratedAt,
  }) {
    return {
      if (id != null) 'id': id,
      if (oldImageId != null) 'old_image_id': oldImageId,
      if (newUrl != null) 'new_url': newUrl,
      if (bucket != null) 'bucket': bucket,
      if (path != null) 'path': path,
      if (migratedAt != null) 'migrated_at': migratedAt,
    };
  }

  Map<String, dynamic> toJson() {
    return _generateMap(
      id: id,
      oldImageId: oldImageId,
      newUrl: newUrl,
      bucket: bucket,
      path: path,
      migratedAt: migratedAt,
    );
  }

  static const _unset = Object();
  ImageMigrations copyWith({
    Object? id = _unset,
    Object? oldImageId = _unset,
    Object? newUrl = _unset,
    Object? bucket = _unset,
    Object? path = _unset,
    Object? migratedAt = _unset,
  }) {
    return ImageMigrations(
      id: id == _unset ? this.id : id as String,
      oldImageId: oldImageId == _unset ? this.oldImageId : oldImageId as int?,
      newUrl: newUrl == _unset ? this.newUrl : newUrl as String,
      bucket: bucket == _unset ? this.bucket : bucket as String,
      path: path == _unset ? this.path : path as String,
      migratedAt:
          migratedAt == _unset ? this.migratedAt : migratedAt as DateTime?,
    );
  }
}
