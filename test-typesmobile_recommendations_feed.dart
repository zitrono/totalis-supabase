// ignore_for_file: non_constant_identifier_names, camel_case_types, file_namesimport, file_names, unnecessary_null_comparison, prefer_null_aware_operators
// WARNING: This code is auto-generated by Supadart.
// WARNING: Modifications may be overwritten. Please make changes in the Supadart configuration.
import 'supadart_header.dart';

class MobileRecommendationsFeed
    implements SupadartClass<MobileRecommendationsFeed> {
  final String? id;
  final String? userId;
  final String? title;
  final String? recommendationText;
  final String? action;
  final String? why;
  final String? recommendationType;
  final int? importance;
  final num? relevance;
  final bool? isActive;
  final DateTime? createdAt;
  final String? categoryId;
  final String? categoryName;
  final String? categoryColor;
  final String? categoryIcon;

  const MobileRecommendationsFeed({
    this.id,
    this.userId,
    this.title,
    this.recommendationText,
    this.action,
    this.why,
    this.recommendationType,
    this.importance,
    this.relevance,
    this.isActive,
    this.createdAt,
    this.categoryId,
    this.categoryName,
    this.categoryColor,
    this.categoryIcon,
  });

  static String get table_name => 'mobile_recommendations_feed';
  static String get c_id => 'id';
  static String get c_userId => 'user_id';
  static String get c_title => 'title';
  static String get c_recommendationText => 'recommendation_text';
  static String get c_action => 'action';
  static String get c_why => 'why';
  static String get c_recommendationType => 'recommendation_type';
  static String get c_importance => 'importance';
  static String get c_relevance => 'relevance';
  static String get c_isActive => 'is_active';
  static String get c_createdAt => 'created_at';
  static String get c_categoryId => 'category_id';
  static String get c_categoryName => 'category_name';
  static String get c_categoryColor => 'category_color';
  static String get c_categoryIcon => 'category_icon';

  static List<MobileRecommendationsFeed> converter(
      List<Map<String, dynamic>> data) {
    return data.map(MobileRecommendationsFeed.fromJson).toList();
  }

  static MobileRecommendationsFeed converterSingle(Map<String, dynamic> data) {
    return MobileRecommendationsFeed.fromJson(data);
  }

  static Map<String, dynamic> _generateMap({
    String? id,
    String? userId,
    String? title,
    String? recommendationText,
    String? action,
    String? why,
    String? recommendationType,
    int? importance,
    num? relevance,
    bool? isActive,
    DateTime? createdAt,
    String? categoryId,
    String? categoryName,
    String? categoryColor,
    String? categoryIcon,
  }) {
    return {
      if (id != null) 'id': id,
      if (userId != null) 'user_id': userId,
      if (title != null) 'title': title,
      if (recommendationText != null) 'recommendation_text': recommendationText,
      if (action != null) 'action': action,
      if (why != null) 'why': why,
      if (recommendationType != null) 'recommendation_type': recommendationType,
      if (importance != null) 'importance': importance,
      if (relevance != null) 'relevance': relevance.toString(),
      if (isActive != null) 'is_active': isActive,
      if (createdAt != null) 'created_at': createdAt.toUtc().toIso8601String(),
      if (categoryId != null) 'category_id': categoryId,
      if (categoryName != null) 'category_name': categoryName,
      if (categoryColor != null) 'category_color': categoryColor,
      if (categoryIcon != null) 'category_icon': categoryIcon,
    };
  }

  static Map<String, dynamic> insert({
    String? id,
    String? userId,
    String? title,
    String? recommendationText,
    String? action,
    String? why,
    String? recommendationType,
    int? importance,
    num? relevance,
    bool? isActive,
    DateTime? createdAt,
    String? categoryId,
    String? categoryName,
    String? categoryColor,
    String? categoryIcon,
  }) {
    return _generateMap(
      id: id,
      userId: userId,
      title: title,
      recommendationText: recommendationText,
      action: action,
      why: why,
      recommendationType: recommendationType,
      importance: importance,
      relevance: relevance,
      isActive: isActive,
      createdAt: createdAt,
      categoryId: categoryId,
      categoryName: categoryName,
      categoryColor: categoryColor,
      categoryIcon: categoryIcon,
    );
  }

  static Map<String, dynamic> update({
    String? id,
    String? userId,
    String? title,
    String? recommendationText,
    String? action,
    String? why,
    String? recommendationType,
    int? importance,
    num? relevance,
    bool? isActive,
    DateTime? createdAt,
    String? categoryId,
    String? categoryName,
    String? categoryColor,
    String? categoryIcon,
  }) {
    return _generateMap(
      id: id,
      userId: userId,
      title: title,
      recommendationText: recommendationText,
      action: action,
      why: why,
      recommendationType: recommendationType,
      importance: importance,
      relevance: relevance,
      isActive: isActive,
      createdAt: createdAt,
      categoryId: categoryId,
      categoryName: categoryName,
      categoryColor: categoryColor,
      categoryIcon: categoryIcon,
    );
  }

  factory MobileRecommendationsFeed.fromJson(Map<String, dynamic> jsonn) {
    return MobileRecommendationsFeed(
      id: jsonn['id'] != null ? jsonn['id'].toString() : null,
      userId: jsonn['user_id'] != null ? jsonn['user_id'].toString() : null,
      title: jsonn['title'] != null ? jsonn['title'].toString() : null,
      recommendationText: jsonn['recommendation_text'] != null
          ? jsonn['recommendation_text'].toString()
          : null,
      action: jsonn['action'] != null ? jsonn['action'].toString() : null,
      why: jsonn['why'] != null ? jsonn['why'].toString() : null,
      recommendationType: jsonn['recommendation_type'] != null
          ? jsonn['recommendation_type'].toString()
          : null,
      importance: jsonn['importance'] != null
          ? int.parse(jsonn['importance'].toString())
          : null,
      relevance: jsonn['relevance'] != null
          ? num.parse(jsonn['relevance'].toString())
          : null,
      isActive: jsonn['is_active'] != null ? jsonn['is_active'] as bool : null,
      createdAt: jsonn['created_at'] != null
          ? DateTime.parse(jsonn['created_at'].toString())
          : null,
      categoryId:
          jsonn['category_id'] != null ? jsonn['category_id'].toString() : null,
      categoryName: jsonn['category_name'] != null
          ? jsonn['category_name'].toString()
          : null,
      categoryColor: jsonn['category_color'] != null
          ? jsonn['category_color'].toString()
          : null,
      categoryIcon: jsonn['category_icon'] != null
          ? jsonn['category_icon'].toString()
          : null,
    );
  }

  static Object New({
    String? id,
    String? userId,
    String? title,
    String? recommendationText,
    String? action,
    String? why,
    String? recommendationType,
    int? importance,
    num? relevance,
    bool? isActive,
    DateTime? createdAt,
    String? categoryId,
    String? categoryName,
    String? categoryColor,
    String? categoryIcon,
  }) {
    return {
      if (id != null) 'id': id,
      if (userId != null) 'user_id': userId,
      if (title != null) 'title': title,
      if (recommendationText != null) 'recommendation_text': recommendationText,
      if (action != null) 'action': action,
      if (why != null) 'why': why,
      if (recommendationType != null) 'recommendation_type': recommendationType,
      if (importance != null) 'importance': importance,
      if (relevance != null) 'relevance': relevance,
      if (isActive != null) 'is_active': isActive,
      if (createdAt != null) 'created_at': createdAt,
      if (categoryId != null) 'category_id': categoryId,
      if (categoryName != null) 'category_name': categoryName,
      if (categoryColor != null) 'category_color': categoryColor,
      if (categoryIcon != null) 'category_icon': categoryIcon,
    };
  }

  Map<String, dynamic> toJson() {
    return _generateMap(
      id: id,
      userId: userId,
      title: title,
      recommendationText: recommendationText,
      action: action,
      why: why,
      recommendationType: recommendationType,
      importance: importance,
      relevance: relevance,
      isActive: isActive,
      createdAt: createdAt,
      categoryId: categoryId,
      categoryName: categoryName,
      categoryColor: categoryColor,
      categoryIcon: categoryIcon,
    );
  }

  static const _unset = Object();
  MobileRecommendationsFeed copyWith({
    Object? id = _unset,
    Object? userId = _unset,
    Object? title = _unset,
    Object? recommendationText = _unset,
    Object? action = _unset,
    Object? why = _unset,
    Object? recommendationType = _unset,
    Object? importance = _unset,
    Object? relevance = _unset,
    Object? isActive = _unset,
    Object? createdAt = _unset,
    Object? categoryId = _unset,
    Object? categoryName = _unset,
    Object? categoryColor = _unset,
    Object? categoryIcon = _unset,
  }) {
    return MobileRecommendationsFeed(
      id: id == _unset ? this.id : id as String?,
      userId: userId == _unset ? this.userId : userId as String?,
      title: title == _unset ? this.title : title as String?,
      recommendationText: recommendationText == _unset
          ? this.recommendationText
          : recommendationText as String?,
      action: action == _unset ? this.action : action as String?,
      why: why == _unset ? this.why : why as String?,
      recommendationType: recommendationType == _unset
          ? this.recommendationType
          : recommendationType as String?,
      importance: importance == _unset ? this.importance : importance as int?,
      relevance: relevance == _unset ? this.relevance : relevance as num?,
      isActive: isActive == _unset ? this.isActive : isActive as bool?,
      createdAt: createdAt == _unset ? this.createdAt : createdAt as DateTime?,
      categoryId:
          categoryId == _unset ? this.categoryId : categoryId as String?,
      categoryName:
          categoryName == _unset ? this.categoryName : categoryName as String?,
      categoryColor: categoryColor == _unset
          ? this.categoryColor
          : categoryColor as String?,
      categoryIcon:
          categoryIcon == _unset ? this.categoryIcon : categoryIcon as String?,
    );
  }
}
