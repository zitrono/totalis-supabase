// ignore_for_file: non_constant_identifier_names, camel_case_types, file_namesimport, file_names, unnecessary_null_comparison, prefer_null_aware_operators
// WARNING: This code is auto-generated by Supadart.
// WARNING: Modifications may be overwritten. Please make changes in the Supadart configuration.
import 'supadart_header.dart';

class MessageThreads implements SupadartClass<MessageThreads> {
  final String id;
  final String userId;
  final String categoryId;
  final String? coachId;
  final String? title;
  final DateTime? lastMessageAt;
  final int? messageCount;
  final bool? isArchived;
  final Map<String, dynamic>? metadata;
  final DateTime createdAt;
  final DateTime updatedAt;

  const MessageThreads({
    required this.id,
    required this.userId,
    required this.categoryId,
    this.coachId,
    this.title,
    this.lastMessageAt,
    this.messageCount,
    this.isArchived,
    this.metadata,
    required this.createdAt,
    required this.updatedAt,
  });

  static String get table_name => 'message_threads';
  static String get c_id => 'id';
  static String get c_userId => 'user_id';
  static String get c_categoryId => 'category_id';
  static String get c_coachId => 'coach_id';
  static String get c_title => 'title';
  static String get c_lastMessageAt => 'last_message_at';
  static String get c_messageCount => 'message_count';
  static String get c_isArchived => 'is_archived';
  static String get c_metadata => 'metadata';
  static String get c_createdAt => 'created_at';
  static String get c_updatedAt => 'updated_at';

  static List<MessageThreads> converter(List<Map<String, dynamic>> data) {
    return data.map(MessageThreads.fromJson).toList();
  }

  static MessageThreads converterSingle(Map<String, dynamic> data) {
    return MessageThreads.fromJson(data);
  }

  static Map<String, dynamic> _generateMap({
    String? id,
    String? userId,
    String? categoryId,
    String? coachId,
    String? title,
    DateTime? lastMessageAt,
    int? messageCount,
    bool? isArchived,
    Map<String, dynamic>? metadata,
    DateTime? createdAt,
    DateTime? updatedAt,
  }) {
    return {
      if (id != null) 'id': id,
      if (userId != null) 'user_id': userId,
      if (categoryId != null) 'category_id': categoryId,
      if (coachId != null) 'coach_id': coachId,
      if (title != null) 'title': title,
      if (lastMessageAt != null)
        'last_message_at': lastMessageAt.toUtc().toIso8601String(),
      if (messageCount != null) 'message_count': messageCount,
      if (isArchived != null) 'is_archived': isArchived,
      if (metadata != null) 'metadata': metadata,
      if (createdAt != null) 'created_at': createdAt.toUtc().toIso8601String(),
      if (updatedAt != null) 'updated_at': updatedAt.toUtc().toIso8601String(),
    };
  }

  static Map<String, dynamic> insert({
    String? id,
    required String userId,
    required String categoryId,
    String? coachId,
    String? title,
    DateTime? lastMessageAt,
    int? messageCount,
    bool? isArchived,
    Map<String, dynamic>? metadata,
    DateTime? createdAt,
    DateTime? updatedAt,
  }) {
    return _generateMap(
      id: id,
      userId: userId,
      categoryId: categoryId,
      coachId: coachId,
      title: title,
      lastMessageAt: lastMessageAt,
      messageCount: messageCount,
      isArchived: isArchived,
      metadata: metadata,
      createdAt: createdAt,
      updatedAt: updatedAt,
    );
  }

  static Map<String, dynamic> update({
    String? id,
    String? userId,
    String? categoryId,
    String? coachId,
    String? title,
    DateTime? lastMessageAt,
    int? messageCount,
    bool? isArchived,
    Map<String, dynamic>? metadata,
    DateTime? createdAt,
    DateTime? updatedAt,
  }) {
    return _generateMap(
      id: id,
      userId: userId,
      categoryId: categoryId,
      coachId: coachId,
      title: title,
      lastMessageAt: lastMessageAt,
      messageCount: messageCount,
      isArchived: isArchived,
      metadata: metadata,
      createdAt: createdAt,
      updatedAt: updatedAt,
    );
  }

  factory MessageThreads.fromJson(Map<String, dynamic> jsonn) {
    return MessageThreads(
      id: jsonn['id'] != null ? jsonn['id'].toString() : '',
      userId: jsonn['user_id'] != null ? jsonn['user_id'].toString() : '',
      categoryId:
          jsonn['category_id'] != null ? jsonn['category_id'].toString() : '',
      coachId: jsonn['coach_id'] != null ? jsonn['coach_id'].toString() : null,
      title: jsonn['title'] != null ? jsonn['title'].toString() : null,
      lastMessageAt: jsonn['last_message_at'] != null
          ? DateTime.parse(jsonn['last_message_at'].toString())
          : null,
      messageCount: jsonn['message_count'] != null
          ? int.parse(jsonn['message_count'].toString())
          : null,
      isArchived:
          jsonn['is_archived'] != null ? jsonn['is_archived'] as bool : null,
      metadata: jsonn['metadata'] != null
          ? jsonn['metadata'] as Map<String, dynamic>
          : null,
      createdAt: jsonn['created_at'] != null
          ? DateTime.parse(jsonn['created_at'].toString())
          : DateTime.fromMillisecondsSinceEpoch(0),
      updatedAt: jsonn['updated_at'] != null
          ? DateTime.parse(jsonn['updated_at'].toString())
          : DateTime.fromMillisecondsSinceEpoch(0),
    );
  }

  static Object New({
    String? id,
    String? userId,
    String? categoryId,
    String? coachId,
    String? title,
    DateTime? lastMessageAt,
    int? messageCount,
    bool? isArchived,
    Map<String, dynamic>? metadata,
    DateTime? createdAt,
    DateTime? updatedAt,
  }) {
    return {
      if (id != null) 'id': id,
      if (userId != null) 'user_id': userId,
      if (categoryId != null) 'category_id': categoryId,
      if (coachId != null) 'coach_id': coachId,
      if (title != null) 'title': title,
      if (lastMessageAt != null) 'last_message_at': lastMessageAt,
      if (messageCount != null) 'message_count': messageCount,
      if (isArchived != null) 'is_archived': isArchived,
      if (metadata != null) 'metadata': metadata,
      if (createdAt != null) 'created_at': createdAt,
      if (updatedAt != null) 'updated_at': updatedAt,
    };
  }

  Map<String, dynamic> toJson() {
    return _generateMap(
      id: id,
      userId: userId,
      categoryId: categoryId,
      coachId: coachId,
      title: title,
      lastMessageAt: lastMessageAt,
      messageCount: messageCount,
      isArchived: isArchived,
      metadata: metadata,
      createdAt: createdAt,
      updatedAt: updatedAt,
    );
  }

  static const _unset = Object();
  MessageThreads copyWith({
    Object? id = _unset,
    Object? userId = _unset,
    Object? categoryId = _unset,
    Object? coachId = _unset,
    Object? title = _unset,
    Object? lastMessageAt = _unset,
    Object? messageCount = _unset,
    Object? isArchived = _unset,
    Object? metadata = _unset,
    Object? createdAt = _unset,
    Object? updatedAt = _unset,
  }) {
    return MessageThreads(
      id: id == _unset ? this.id : id as String,
      userId: userId == _unset ? this.userId : userId as String,
      categoryId: categoryId == _unset ? this.categoryId : categoryId as String,
      coachId: coachId == _unset ? this.coachId : coachId as String?,
      title: title == _unset ? this.title : title as String?,
      lastMessageAt: lastMessageAt == _unset
          ? this.lastMessageAt
          : lastMessageAt as DateTime?,
      messageCount:
          messageCount == _unset ? this.messageCount : messageCount as int?,
      isArchived: isArchived == _unset ? this.isArchived : isArchived as bool?,
      metadata: metadata == _unset
          ? this.metadata
          : metadata as Map<String, dynamic>?,
      createdAt: createdAt == _unset ? this.createdAt : createdAt as DateTime,
      updatedAt: updatedAt == _unset ? this.updatedAt : updatedAt as DateTime,
    );
  }
}
