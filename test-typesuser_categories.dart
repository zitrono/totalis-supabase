// ignore_for_file: non_constant_identifier_names, camel_case_types, file_namesimport, file_names, unnecessary_null_comparison, prefer_null_aware_operators
// WARNING: This code is auto-generated by Supadart.
// WARNING: Modifications may be overwritten. Please make changes in the Supadart configuration.
import 'supadart_header.dart';

class UserCategories implements SupadartClass<UserCategories> {
  final String userId;
  final String categoryId;
  final bool? isFavorite;
  final bool? isSubscribed;
  final bool? notificationEnabled;
  final DateTime? lastInteractionAt;
  final Map<String, dynamic>? settings;
  final Map<String, dynamic>? metadata;
  final DateTime createdAt;
  final DateTime updatedAt;

  const UserCategories({
    required this.userId,
    required this.categoryId,
    this.isFavorite,
    this.isSubscribed,
    this.notificationEnabled,
    this.lastInteractionAt,
    this.settings,
    this.metadata,
    required this.createdAt,
    required this.updatedAt,
  });

  static String get table_name => 'user_categories';
  static String get c_userId => 'user_id';
  static String get c_categoryId => 'category_id';
  static String get c_isFavorite => 'is_favorite';
  static String get c_isSubscribed => 'is_subscribed';
  static String get c_notificationEnabled => 'notification_enabled';
  static String get c_lastInteractionAt => 'last_interaction_at';
  static String get c_settings => 'settings';
  static String get c_metadata => 'metadata';
  static String get c_createdAt => 'created_at';
  static String get c_updatedAt => 'updated_at';

  static List<UserCategories> converter(List<Map<String, dynamic>> data) {
    return data.map(UserCategories.fromJson).toList();
  }

  static UserCategories converterSingle(Map<String, dynamic> data) {
    return UserCategories.fromJson(data);
  }

  static Map<String, dynamic> _generateMap({
    String? userId,
    String? categoryId,
    bool? isFavorite,
    bool? isSubscribed,
    bool? notificationEnabled,
    DateTime? lastInteractionAt,
    Map<String, dynamic>? settings,
    Map<String, dynamic>? metadata,
    DateTime? createdAt,
    DateTime? updatedAt,
  }) {
    return {
      if (userId != null) 'user_id': userId,
      if (categoryId != null) 'category_id': categoryId,
      if (isFavorite != null) 'is_favorite': isFavorite,
      if (isSubscribed != null) 'is_subscribed': isSubscribed,
      if (notificationEnabled != null)
        'notification_enabled': notificationEnabled,
      if (lastInteractionAt != null)
        'last_interaction_at': lastInteractionAt.toUtc().toIso8601String(),
      if (settings != null) 'settings': settings,
      if (metadata != null) 'metadata': metadata,
      if (createdAt != null) 'created_at': createdAt.toUtc().toIso8601String(),
      if (updatedAt != null) 'updated_at': updatedAt.toUtc().toIso8601String(),
    };
  }

  static Map<String, dynamic> insert({
    String? userId,
    String? categoryId,
    bool? isFavorite,
    bool? isSubscribed,
    bool? notificationEnabled,
    DateTime? lastInteractionAt,
    Map<String, dynamic>? settings,
    Map<String, dynamic>? metadata,
    DateTime? createdAt,
    DateTime? updatedAt,
  }) {
    return _generateMap(
      userId: userId,
      categoryId: categoryId,
      isFavorite: isFavorite,
      isSubscribed: isSubscribed,
      notificationEnabled: notificationEnabled,
      lastInteractionAt: lastInteractionAt,
      settings: settings,
      metadata: metadata,
      createdAt: createdAt,
      updatedAt: updatedAt,
    );
  }

  static Map<String, dynamic> update({
    String? userId,
    String? categoryId,
    bool? isFavorite,
    bool? isSubscribed,
    bool? notificationEnabled,
    DateTime? lastInteractionAt,
    Map<String, dynamic>? settings,
    Map<String, dynamic>? metadata,
    DateTime? createdAt,
    DateTime? updatedAt,
  }) {
    return _generateMap(
      userId: userId,
      categoryId: categoryId,
      isFavorite: isFavorite,
      isSubscribed: isSubscribed,
      notificationEnabled: notificationEnabled,
      lastInteractionAt: lastInteractionAt,
      settings: settings,
      metadata: metadata,
      createdAt: createdAt,
      updatedAt: updatedAt,
    );
  }

  factory UserCategories.fromJson(Map<String, dynamic> jsonn) {
    return UserCategories(
      userId: jsonn['user_id'] != null ? jsonn['user_id'].toString() : '',
      categoryId:
          jsonn['category_id'] != null ? jsonn['category_id'].toString() : '',
      isFavorite:
          jsonn['is_favorite'] != null ? jsonn['is_favorite'] as bool : null,
      isSubscribed: jsonn['is_subscribed'] != null
          ? jsonn['is_subscribed'] as bool
          : null,
      notificationEnabled: jsonn['notification_enabled'] != null
          ? jsonn['notification_enabled'] as bool
          : null,
      lastInteractionAt: jsonn['last_interaction_at'] != null
          ? DateTime.parse(jsonn['last_interaction_at'].toString())
          : null,
      settings: jsonn['settings'] != null
          ? jsonn['settings'] as Map<String, dynamic>
          : null,
      metadata: jsonn['metadata'] != null
          ? jsonn['metadata'] as Map<String, dynamic>
          : null,
      createdAt: jsonn['created_at'] != null
          ? DateTime.parse(jsonn['created_at'].toString())
          : DateTime.fromMillisecondsSinceEpoch(0),
      updatedAt: jsonn['updated_at'] != null
          ? DateTime.parse(jsonn['updated_at'].toString())
          : DateTime.fromMillisecondsSinceEpoch(0),
    );
  }

  static Object New({
    String? userId,
    String? categoryId,
    bool? isFavorite,
    bool? isSubscribed,
    bool? notificationEnabled,
    DateTime? lastInteractionAt,
    Map<String, dynamic>? settings,
    Map<String, dynamic>? metadata,
    DateTime? createdAt,
    DateTime? updatedAt,
  }) {
    return {
      if (userId != null) 'user_id': userId,
      if (categoryId != null) 'category_id': categoryId,
      if (isFavorite != null) 'is_favorite': isFavorite,
      if (isSubscribed != null) 'is_subscribed': isSubscribed,
      if (notificationEnabled != null)
        'notification_enabled': notificationEnabled,
      if (lastInteractionAt != null) 'last_interaction_at': lastInteractionAt,
      if (settings != null) 'settings': settings,
      if (metadata != null) 'metadata': metadata,
      if (createdAt != null) 'created_at': createdAt,
      if (updatedAt != null) 'updated_at': updatedAt,
    };
  }

  Map<String, dynamic> toJson() {
    return _generateMap(
      userId: userId,
      categoryId: categoryId,
      isFavorite: isFavorite,
      isSubscribed: isSubscribed,
      notificationEnabled: notificationEnabled,
      lastInteractionAt: lastInteractionAt,
      settings: settings,
      metadata: metadata,
      createdAt: createdAt,
      updatedAt: updatedAt,
    );
  }

  static const _unset = Object();
  UserCategories copyWith({
    Object? userId = _unset,
    Object? categoryId = _unset,
    Object? isFavorite = _unset,
    Object? isSubscribed = _unset,
    Object? notificationEnabled = _unset,
    Object? lastInteractionAt = _unset,
    Object? settings = _unset,
    Object? metadata = _unset,
    Object? createdAt = _unset,
    Object? updatedAt = _unset,
  }) {
    return UserCategories(
      userId: userId == _unset ? this.userId : userId as String,
      categoryId: categoryId == _unset ? this.categoryId : categoryId as String,
      isFavorite: isFavorite == _unset ? this.isFavorite : isFavorite as bool?,
      isSubscribed:
          isSubscribed == _unset ? this.isSubscribed : isSubscribed as bool?,
      notificationEnabled: notificationEnabled == _unset
          ? this.notificationEnabled
          : notificationEnabled as bool?,
      lastInteractionAt: lastInteractionAt == _unset
          ? this.lastInteractionAt
          : lastInteractionAt as DateTime?,
      settings: settings == _unset
          ? this.settings
          : settings as Map<String, dynamic>?,
      metadata: metadata == _unset
          ? this.metadata
          : metadata as Map<String, dynamic>?,
      createdAt: createdAt == _unset ? this.createdAt : createdAt as DateTime,
      updatedAt: updatedAt == _unset ? this.updatedAt : updatedAt as DateTime,
    );
  }
}
