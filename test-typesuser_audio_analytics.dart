// ignore_for_file: non_constant_identifier_names, camel_case_types, file_namesimport, file_names, unnecessary_null_comparison, prefer_null_aware_operators
// WARNING: This code is auto-generated by Supadart.
// WARNING: Modifications may be overwritten. Please make changes in the Supadart configuration.
import 'supadart_header.dart';

class UserAudioAnalytics implements SupadartClass<UserAudioAnalytics> {
  final String? userId;
  final DateTime? date;
  final BigInt? totalRequests;
  final BigInt? successfulRequests;
  final BigInt? failedRequests;
  final BigInt? totalBytesProcessed;
  final int? avgProcessingTimeMs;
  final BigInt? totalCharactersTranscribed;
  final int? avgTranscriptionLength;

  const UserAudioAnalytics({
    this.userId,
    this.date,
    this.totalRequests,
    this.successfulRequests,
    this.failedRequests,
    this.totalBytesProcessed,
    this.avgProcessingTimeMs,
    this.totalCharactersTranscribed,
    this.avgTranscriptionLength,
  });

  static String get table_name => 'user_audio_analytics';
  static String get c_userId => 'user_id';
  static String get c_date => 'date';
  static String get c_totalRequests => 'total_requests';
  static String get c_successfulRequests => 'successful_requests';
  static String get c_failedRequests => 'failed_requests';
  static String get c_totalBytesProcessed => 'total_bytes_processed';
  static String get c_avgProcessingTimeMs => 'avg_processing_time_ms';
  static String get c_totalCharactersTranscribed =>
      'total_characters_transcribed';
  static String get c_avgTranscriptionLength => 'avg_transcription_length';

  static List<UserAudioAnalytics> converter(List<Map<String, dynamic>> data) {
    return data.map(UserAudioAnalytics.fromJson).toList();
  }

  static UserAudioAnalytics converterSingle(Map<String, dynamic> data) {
    return UserAudioAnalytics.fromJson(data);
  }

  static Map<String, dynamic> _generateMap({
    String? userId,
    DateTime? date,
    BigInt? totalRequests,
    BigInt? successfulRequests,
    BigInt? failedRequests,
    BigInt? totalBytesProcessed,
    int? avgProcessingTimeMs,
    BigInt? totalCharactersTranscribed,
    int? avgTranscriptionLength,
  }) {
    return {
      if (userId != null) 'user_id': userId,
      if (date != null) 'date': date.toUtc().toIso8601String(),
      if (totalRequests != null) 'total_requests': totalRequests.toString(),
      if (successfulRequests != null)
        'successful_requests': successfulRequests.toString(),
      if (failedRequests != null) 'failed_requests': failedRequests.toString(),
      if (totalBytesProcessed != null)
        'total_bytes_processed': totalBytesProcessed.toString(),
      if (avgProcessingTimeMs != null)
        'avg_processing_time_ms': avgProcessingTimeMs,
      if (totalCharactersTranscribed != null)
        'total_characters_transcribed': totalCharactersTranscribed.toString(),
      if (avgTranscriptionLength != null)
        'avg_transcription_length': avgTranscriptionLength,
    };
  }

  static Map<String, dynamic> insert({
    String? userId,
    DateTime? date,
    BigInt? totalRequests,
    BigInt? successfulRequests,
    BigInt? failedRequests,
    BigInt? totalBytesProcessed,
    int? avgProcessingTimeMs,
    BigInt? totalCharactersTranscribed,
    int? avgTranscriptionLength,
  }) {
    return _generateMap(
      userId: userId,
      date: date,
      totalRequests: totalRequests,
      successfulRequests: successfulRequests,
      failedRequests: failedRequests,
      totalBytesProcessed: totalBytesProcessed,
      avgProcessingTimeMs: avgProcessingTimeMs,
      totalCharactersTranscribed: totalCharactersTranscribed,
      avgTranscriptionLength: avgTranscriptionLength,
    );
  }

  static Map<String, dynamic> update({
    String? userId,
    DateTime? date,
    BigInt? totalRequests,
    BigInt? successfulRequests,
    BigInt? failedRequests,
    BigInt? totalBytesProcessed,
    int? avgProcessingTimeMs,
    BigInt? totalCharactersTranscribed,
    int? avgTranscriptionLength,
  }) {
    return _generateMap(
      userId: userId,
      date: date,
      totalRequests: totalRequests,
      successfulRequests: successfulRequests,
      failedRequests: failedRequests,
      totalBytesProcessed: totalBytesProcessed,
      avgProcessingTimeMs: avgProcessingTimeMs,
      totalCharactersTranscribed: totalCharactersTranscribed,
      avgTranscriptionLength: avgTranscriptionLength,
    );
  }

  factory UserAudioAnalytics.fromJson(Map<String, dynamic> jsonn) {
    return UserAudioAnalytics(
      userId: jsonn['user_id'] != null ? jsonn['user_id'].toString() : null,
      date: jsonn['date'] != null
          ? DateTime.parse(jsonn['date'].toString())
          : null,
      totalRequests: jsonn['total_requests'] != null
          ? BigInt.parse(jsonn['total_requests'].toString())
          : null,
      successfulRequests: jsonn['successful_requests'] != null
          ? BigInt.parse(jsonn['successful_requests'].toString())
          : null,
      failedRequests: jsonn['failed_requests'] != null
          ? BigInt.parse(jsonn['failed_requests'].toString())
          : null,
      totalBytesProcessed: jsonn['total_bytes_processed'] != null
          ? BigInt.parse(jsonn['total_bytes_processed'].toString())
          : null,
      avgProcessingTimeMs: jsonn['avg_processing_time_ms'] != null
          ? int.parse(jsonn['avg_processing_time_ms'].toString())
          : null,
      totalCharactersTranscribed: jsonn['total_characters_transcribed'] != null
          ? BigInt.parse(jsonn['total_characters_transcribed'].toString())
          : null,
      avgTranscriptionLength: jsonn['avg_transcription_length'] != null
          ? int.parse(jsonn['avg_transcription_length'].toString())
          : null,
    );
  }

  static Object New({
    String? userId,
    DateTime? date,
    BigInt? totalRequests,
    BigInt? successfulRequests,
    BigInt? failedRequests,
    BigInt? totalBytesProcessed,
    int? avgProcessingTimeMs,
    BigInt? totalCharactersTranscribed,
    int? avgTranscriptionLength,
  }) {
    return {
      if (userId != null) 'user_id': userId,
      if (date != null) 'date': date,
      if (totalRequests != null) 'total_requests': totalRequests,
      if (successfulRequests != null) 'successful_requests': successfulRequests,
      if (failedRequests != null) 'failed_requests': failedRequests,
      if (totalBytesProcessed != null)
        'total_bytes_processed': totalBytesProcessed,
      if (avgProcessingTimeMs != null)
        'avg_processing_time_ms': avgProcessingTimeMs,
      if (totalCharactersTranscribed != null)
        'total_characters_transcribed': totalCharactersTranscribed,
      if (avgTranscriptionLength != null)
        'avg_transcription_length': avgTranscriptionLength,
    };
  }

  Map<String, dynamic> toJson() {
    return _generateMap(
      userId: userId,
      date: date,
      totalRequests: totalRequests,
      successfulRequests: successfulRequests,
      failedRequests: failedRequests,
      totalBytesProcessed: totalBytesProcessed,
      avgProcessingTimeMs: avgProcessingTimeMs,
      totalCharactersTranscribed: totalCharactersTranscribed,
      avgTranscriptionLength: avgTranscriptionLength,
    );
  }

  static const _unset = Object();
  UserAudioAnalytics copyWith({
    Object? userId = _unset,
    Object? date = _unset,
    Object? totalRequests = _unset,
    Object? successfulRequests = _unset,
    Object? failedRequests = _unset,
    Object? totalBytesProcessed = _unset,
    Object? avgProcessingTimeMs = _unset,
    Object? totalCharactersTranscribed = _unset,
    Object? avgTranscriptionLength = _unset,
  }) {
    return UserAudioAnalytics(
      userId: userId == _unset ? this.userId : userId as String?,
      date: date == _unset ? this.date : date as DateTime?,
      totalRequests: totalRequests == _unset
          ? this.totalRequests
          : totalRequests as BigInt?,
      successfulRequests: successfulRequests == _unset
          ? this.successfulRequests
          : successfulRequests as BigInt?,
      failedRequests: failedRequests == _unset
          ? this.failedRequests
          : failedRequests as BigInt?,
      totalBytesProcessed: totalBytesProcessed == _unset
          ? this.totalBytesProcessed
          : totalBytesProcessed as BigInt?,
      avgProcessingTimeMs: avgProcessingTimeMs == _unset
          ? this.avgProcessingTimeMs
          : avgProcessingTimeMs as int?,
      totalCharactersTranscribed: totalCharactersTranscribed == _unset
          ? this.totalCharactersTranscribed
          : totalCharactersTranscribed as BigInt?,
      avgTranscriptionLength: avgTranscriptionLength == _unset
          ? this.avgTranscriptionLength
          : avgTranscriptionLength as int?,
    );
  }
}
