// ignore_for_file: non_constant_identifier_names, camel_case_types, file_namesimport, file_names, unnecessary_null_comparison, prefer_null_aware_operators
// WARNING: This code is auto-generated by Supadart.
// WARNING: Modifications may be overwritten. Please make changes in the Supadart configuration.
import 'supadart_header.dart';

class CheckinAnalytics implements SupadartClass<CheckinAnalytics> {
  final String? userId;
  final String? categoryId;
  final String? categoryName;
  final BigInt? totalCheckins;
  final num? avgWellnessLevel;
  final DateTime? lastCheckin;
  final DateTime? firstCheckin;

  const CheckinAnalytics({
    this.userId,
    this.categoryId,
    this.categoryName,
    this.totalCheckins,
    this.avgWellnessLevel,
    this.lastCheckin,
    this.firstCheckin,
  });

  static String get table_name => 'checkin_analytics';
  static String get c_userId => 'user_id';
  static String get c_categoryId => 'category_id';
  static String get c_categoryName => 'category_name';
  static String get c_totalCheckins => 'total_checkins';
  static String get c_avgWellnessLevel => 'avg_wellness_level';
  static String get c_lastCheckin => 'last_checkin';
  static String get c_firstCheckin => 'first_checkin';

  static List<CheckinAnalytics> converter(List<Map<String, dynamic>> data) {
    return data.map(CheckinAnalytics.fromJson).toList();
  }

  static CheckinAnalytics converterSingle(Map<String, dynamic> data) {
    return CheckinAnalytics.fromJson(data);
  }

  static Map<String, dynamic> _generateMap({
    String? userId,
    String? categoryId,
    String? categoryName,
    BigInt? totalCheckins,
    num? avgWellnessLevel,
    DateTime? lastCheckin,
    DateTime? firstCheckin,
  }) {
    return {
      if (userId != null) 'user_id': userId,
      if (categoryId != null) 'category_id': categoryId,
      if (categoryName != null) 'category_name': categoryName,
      if (totalCheckins != null) 'total_checkins': totalCheckins.toString(),
      if (avgWellnessLevel != null)
        'avg_wellness_level': avgWellnessLevel.toString(),
      if (lastCheckin != null)
        'last_checkin': lastCheckin.toUtc().toIso8601String(),
      if (firstCheckin != null)
        'first_checkin': firstCheckin.toUtc().toIso8601String(),
    };
  }

  static Map<String, dynamic> insert({
    String? userId,
    String? categoryId,
    String? categoryName,
    BigInt? totalCheckins,
    num? avgWellnessLevel,
    DateTime? lastCheckin,
    DateTime? firstCheckin,
  }) {
    return _generateMap(
      userId: userId,
      categoryId: categoryId,
      categoryName: categoryName,
      totalCheckins: totalCheckins,
      avgWellnessLevel: avgWellnessLevel,
      lastCheckin: lastCheckin,
      firstCheckin: firstCheckin,
    );
  }

  static Map<String, dynamic> update({
    String? userId,
    String? categoryId,
    String? categoryName,
    BigInt? totalCheckins,
    num? avgWellnessLevel,
    DateTime? lastCheckin,
    DateTime? firstCheckin,
  }) {
    return _generateMap(
      userId: userId,
      categoryId: categoryId,
      categoryName: categoryName,
      totalCheckins: totalCheckins,
      avgWellnessLevel: avgWellnessLevel,
      lastCheckin: lastCheckin,
      firstCheckin: firstCheckin,
    );
  }

  factory CheckinAnalytics.fromJson(Map<String, dynamic> jsonn) {
    return CheckinAnalytics(
      userId: jsonn['user_id'] != null ? jsonn['user_id'].toString() : null,
      categoryId:
          jsonn['category_id'] != null ? jsonn['category_id'].toString() : null,
      categoryName: jsonn['category_name'] != null
          ? jsonn['category_name'].toString()
          : null,
      totalCheckins: jsonn['total_checkins'] != null
          ? BigInt.parse(jsonn['total_checkins'].toString())
          : null,
      avgWellnessLevel: jsonn['avg_wellness_level'] != null
          ? num.parse(jsonn['avg_wellness_level'].toString())
          : null,
      lastCheckin: jsonn['last_checkin'] != null
          ? DateTime.parse(jsonn['last_checkin'].toString())
          : null,
      firstCheckin: jsonn['first_checkin'] != null
          ? DateTime.parse(jsonn['first_checkin'].toString())
          : null,
    );
  }

  static Object New({
    String? userId,
    String? categoryId,
    String? categoryName,
    BigInt? totalCheckins,
    num? avgWellnessLevel,
    DateTime? lastCheckin,
    DateTime? firstCheckin,
  }) {
    return {
      if (userId != null) 'user_id': userId,
      if (categoryId != null) 'category_id': categoryId,
      if (categoryName != null) 'category_name': categoryName,
      if (totalCheckins != null) 'total_checkins': totalCheckins,
      if (avgWellnessLevel != null) 'avg_wellness_level': avgWellnessLevel,
      if (lastCheckin != null) 'last_checkin': lastCheckin,
      if (firstCheckin != null) 'first_checkin': firstCheckin,
    };
  }

  Map<String, dynamic> toJson() {
    return _generateMap(
      userId: userId,
      categoryId: categoryId,
      categoryName: categoryName,
      totalCheckins: totalCheckins,
      avgWellnessLevel: avgWellnessLevel,
      lastCheckin: lastCheckin,
      firstCheckin: firstCheckin,
    );
  }

  static const _unset = Object();
  CheckinAnalytics copyWith({
    Object? userId = _unset,
    Object? categoryId = _unset,
    Object? categoryName = _unset,
    Object? totalCheckins = _unset,
    Object? avgWellnessLevel = _unset,
    Object? lastCheckin = _unset,
    Object? firstCheckin = _unset,
  }) {
    return CheckinAnalytics(
      userId: userId == _unset ? this.userId : userId as String?,
      categoryId:
          categoryId == _unset ? this.categoryId : categoryId as String?,
      categoryName:
          categoryName == _unset ? this.categoryName : categoryName as String?,
      totalCheckins: totalCheckins == _unset
          ? this.totalCheckins
          : totalCheckins as BigInt?,
      avgWellnessLevel: avgWellnessLevel == _unset
          ? this.avgWellnessLevel
          : avgWellnessLevel as num?,
      lastCheckin:
          lastCheckin == _unset ? this.lastCheckin : lastCheckin as DateTime?,
      firstCheckin: firstCheckin == _unset
          ? this.firstCheckin
          : firstCheckin as DateTime?,
    );
  }
}
