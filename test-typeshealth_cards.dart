// ignore_for_file: non_constant_identifier_names, camel_case_types, file_namesimport, file_names, unnecessary_null_comparison, prefer_null_aware_operators
// WARNING: This code is auto-generated by Supadart.
// WARNING: Modifications may be overwritten. Please make changes in the Supadart configuration.
import 'supadart_header.dart';

class HealthCards implements SupadartClass<HealthCards> {
  final String id;
  final String userId;
  final String? categoryId;
  final String? checkinId;
  final int type;
  final String title;
  final String content;
  final int? importance;
  final bool? isChecked;
  final DateTime? expiresAt;
  final DateTime? createdAt;

  const HealthCards({
    required this.id,
    required this.userId,
    this.categoryId,
    this.checkinId,
    required this.type,
    required this.title,
    required this.content,
    this.importance,
    this.isChecked,
    this.expiresAt,
    this.createdAt,
  });

  static String get table_name => 'health_cards';
  static String get c_id => 'id';
  static String get c_userId => 'user_id';
  static String get c_categoryId => 'category_id';
  static String get c_checkinId => 'checkin_id';
  static String get c_type => 'type';
  static String get c_title => 'title';
  static String get c_content => 'content';
  static String get c_importance => 'importance';
  static String get c_isChecked => 'is_checked';
  static String get c_expiresAt => 'expires_at';
  static String get c_createdAt => 'created_at';

  static List<HealthCards> converter(List<Map<String, dynamic>> data) {
    return data.map(HealthCards.fromJson).toList();
  }

  static HealthCards converterSingle(Map<String, dynamic> data) {
    return HealthCards.fromJson(data);
  }

  static Map<String, dynamic> _generateMap({
    String? id,
    String? userId,
    String? categoryId,
    String? checkinId,
    int? type,
    String? title,
    String? content,
    int? importance,
    bool? isChecked,
    DateTime? expiresAt,
    DateTime? createdAt,
  }) {
    return {
      if (id != null) 'id': id,
      if (userId != null) 'user_id': userId,
      if (categoryId != null) 'category_id': categoryId,
      if (checkinId != null) 'checkin_id': checkinId,
      if (type != null) 'type': type,
      if (title != null) 'title': title,
      if (content != null) 'content': content,
      if (importance != null) 'importance': importance,
      if (isChecked != null) 'is_checked': isChecked,
      if (expiresAt != null) 'expires_at': expiresAt.toUtc().toIso8601String(),
      if (createdAt != null) 'created_at': createdAt.toUtc().toIso8601String(),
    };
  }

  static Map<String, dynamic> insert({
    String? id,
    required String userId,
    String? categoryId,
    String? checkinId,
    required int type,
    required String title,
    required String content,
    int? importance,
    bool? isChecked,
    DateTime? expiresAt,
    DateTime? createdAt,
  }) {
    return _generateMap(
      id: id,
      userId: userId,
      categoryId: categoryId,
      checkinId: checkinId,
      type: type,
      title: title,
      content: content,
      importance: importance,
      isChecked: isChecked,
      expiresAt: expiresAt,
      createdAt: createdAt,
    );
  }

  static Map<String, dynamic> update({
    String? id,
    String? userId,
    String? categoryId,
    String? checkinId,
    int? type,
    String? title,
    String? content,
    int? importance,
    bool? isChecked,
    DateTime? expiresAt,
    DateTime? createdAt,
  }) {
    return _generateMap(
      id: id,
      userId: userId,
      categoryId: categoryId,
      checkinId: checkinId,
      type: type,
      title: title,
      content: content,
      importance: importance,
      isChecked: isChecked,
      expiresAt: expiresAt,
      createdAt: createdAt,
    );
  }

  factory HealthCards.fromJson(Map<String, dynamic> jsonn) {
    return HealthCards(
      id: jsonn['id'] != null ? jsonn['id'].toString() : '',
      userId: jsonn['user_id'] != null ? jsonn['user_id'].toString() : '',
      categoryId:
          jsonn['category_id'] != null ? jsonn['category_id'].toString() : null,
      checkinId:
          jsonn['checkin_id'] != null ? jsonn['checkin_id'].toString() : null,
      type: jsonn['type'] != null ? int.parse(jsonn['type'].toString()) : 0,
      title: jsonn['title'] != null ? jsonn['title'].toString() : '',
      content: jsonn['content'] != null ? jsonn['content'].toString() : '',
      importance: jsonn['importance'] != null
          ? int.parse(jsonn['importance'].toString())
          : null,
      isChecked:
          jsonn['is_checked'] != null ? jsonn['is_checked'] as bool : null,
      expiresAt: jsonn['expires_at'] != null
          ? DateTime.parse(jsonn['expires_at'].toString())
          : null,
      createdAt: jsonn['created_at'] != null
          ? DateTime.parse(jsonn['created_at'].toString())
          : null,
    );
  }

  static Object New({
    String? id,
    String? userId,
    String? categoryId,
    String? checkinId,
    int? type,
    String? title,
    String? content,
    int? importance,
    bool? isChecked,
    DateTime? expiresAt,
    DateTime? createdAt,
  }) {
    return {
      if (id != null) 'id': id,
      if (userId != null) 'user_id': userId,
      if (categoryId != null) 'category_id': categoryId,
      if (checkinId != null) 'checkin_id': checkinId,
      if (type != null) 'type': type,
      if (title != null) 'title': title,
      if (content != null) 'content': content,
      if (importance != null) 'importance': importance,
      if (isChecked != null) 'is_checked': isChecked,
      if (expiresAt != null) 'expires_at': expiresAt,
      if (createdAt != null) 'created_at': createdAt,
    };
  }

  Map<String, dynamic> toJson() {
    return _generateMap(
      id: id,
      userId: userId,
      categoryId: categoryId,
      checkinId: checkinId,
      type: type,
      title: title,
      content: content,
      importance: importance,
      isChecked: isChecked,
      expiresAt: expiresAt,
      createdAt: createdAt,
    );
  }

  static const _unset = Object();
  HealthCards copyWith({
    Object? id = _unset,
    Object? userId = _unset,
    Object? categoryId = _unset,
    Object? checkinId = _unset,
    Object? type = _unset,
    Object? title = _unset,
    Object? content = _unset,
    Object? importance = _unset,
    Object? isChecked = _unset,
    Object? expiresAt = _unset,
    Object? createdAt = _unset,
  }) {
    return HealthCards(
      id: id == _unset ? this.id : id as String,
      userId: userId == _unset ? this.userId : userId as String,
      categoryId:
          categoryId == _unset ? this.categoryId : categoryId as String?,
      checkinId: checkinId == _unset ? this.checkinId : checkinId as String?,
      type: type == _unset ? this.type : type as int,
      title: title == _unset ? this.title : title as String,
      content: content == _unset ? this.content : content as String,
      importance: importance == _unset ? this.importance : importance as int?,
      isChecked: isChecked == _unset ? this.isChecked : isChecked as bool?,
      expiresAt: expiresAt == _unset ? this.expiresAt : expiresAt as DateTime?,
      createdAt: createdAt == _unset ? this.createdAt : createdAt as DateTime?,
    );
  }
}
