// ignore_for_file: non_constant_identifier_names, camel_case_types, file_namesimport, file_names, unnecessary_null_comparison, prefer_null_aware_operators
// WARNING: This code is auto-generated by Supadart.
// WARNING: Modifications may be overwritten. Please make changes in the Supadart configuration.
import 'supadart_header.dart';

class UserFeedback implements SupadartClass<UserFeedback> {
  final String id;
  final String userId;
  final String? messageId;
  final String? recommendationId;
  final String? healthCardId;
  final String feedbackType;
  final int? rating;
  final String? content;
  final Map<String, dynamic>? context;
  final bool? isProcessed;
  final DateTime? processedAt;
  final DateTime? createdAt;

  const UserFeedback({
    required this.id,
    required this.userId,
    this.messageId,
    this.recommendationId,
    this.healthCardId,
    required this.feedbackType,
    this.rating,
    this.content,
    this.context,
    this.isProcessed,
    this.processedAt,
    this.createdAt,
  });

  static String get table_name => 'user_feedback';
  static String get c_id => 'id';
  static String get c_userId => 'user_id';
  static String get c_messageId => 'message_id';
  static String get c_recommendationId => 'recommendation_id';
  static String get c_healthCardId => 'health_card_id';
  static String get c_feedbackType => 'feedback_type';
  static String get c_rating => 'rating';
  static String get c_content => 'content';
  static String get c_context => 'context';
  static String get c_isProcessed => 'is_processed';
  static String get c_processedAt => 'processed_at';
  static String get c_createdAt => 'created_at';

  static List<UserFeedback> converter(List<Map<String, dynamic>> data) {
    return data.map(UserFeedback.fromJson).toList();
  }

  static UserFeedback converterSingle(Map<String, dynamic> data) {
    return UserFeedback.fromJson(data);
  }

  static Map<String, dynamic> _generateMap({
    String? id,
    String? userId,
    String? messageId,
    String? recommendationId,
    String? healthCardId,
    String? feedbackType,
    int? rating,
    String? content,
    Map<String, dynamic>? context,
    bool? isProcessed,
    DateTime? processedAt,
    DateTime? createdAt,
  }) {
    return {
      if (id != null) 'id': id,
      if (userId != null) 'user_id': userId,
      if (messageId != null) 'message_id': messageId,
      if (recommendationId != null) 'recommendation_id': recommendationId,
      if (healthCardId != null) 'health_card_id': healthCardId,
      if (feedbackType != null) 'feedback_type': feedbackType,
      if (rating != null) 'rating': rating,
      if (content != null) 'content': content,
      if (context != null) 'context': context,
      if (isProcessed != null) 'is_processed': isProcessed,
      if (processedAt != null)
        'processed_at': processedAt.toUtc().toIso8601String(),
      if (createdAt != null) 'created_at': createdAt.toUtc().toIso8601String(),
    };
  }

  static Map<String, dynamic> insert({
    String? id,
    required String userId,
    String? messageId,
    String? recommendationId,
    String? healthCardId,
    required String feedbackType,
    int? rating,
    String? content,
    Map<String, dynamic>? context,
    bool? isProcessed,
    DateTime? processedAt,
    DateTime? createdAt,
  }) {
    return _generateMap(
      id: id,
      userId: userId,
      messageId: messageId,
      recommendationId: recommendationId,
      healthCardId: healthCardId,
      feedbackType: feedbackType,
      rating: rating,
      content: content,
      context: context,
      isProcessed: isProcessed,
      processedAt: processedAt,
      createdAt: createdAt,
    );
  }

  static Map<String, dynamic> update({
    String? id,
    String? userId,
    String? messageId,
    String? recommendationId,
    String? healthCardId,
    String? feedbackType,
    int? rating,
    String? content,
    Map<String, dynamic>? context,
    bool? isProcessed,
    DateTime? processedAt,
    DateTime? createdAt,
  }) {
    return _generateMap(
      id: id,
      userId: userId,
      messageId: messageId,
      recommendationId: recommendationId,
      healthCardId: healthCardId,
      feedbackType: feedbackType,
      rating: rating,
      content: content,
      context: context,
      isProcessed: isProcessed,
      processedAt: processedAt,
      createdAt: createdAt,
    );
  }

  factory UserFeedback.fromJson(Map<String, dynamic> jsonn) {
    return UserFeedback(
      id: jsonn['id'] != null ? jsonn['id'].toString() : '',
      userId: jsonn['user_id'] != null ? jsonn['user_id'].toString() : '',
      messageId:
          jsonn['message_id'] != null ? jsonn['message_id'].toString() : null,
      recommendationId: jsonn['recommendation_id'] != null
          ? jsonn['recommendation_id'].toString()
          : null,
      healthCardId: jsonn['health_card_id'] != null
          ? jsonn['health_card_id'].toString()
          : null,
      feedbackType: jsonn['feedback_type'] != null
          ? jsonn['feedback_type'].toString()
          : '',
      rating: jsonn['rating'] != null
          ? int.parse(jsonn['rating'].toString())
          : null,
      content: jsonn['content'] != null ? jsonn['content'].toString() : null,
      context: jsonn['context'] != null
          ? jsonn['context'] as Map<String, dynamic>
          : null,
      isProcessed:
          jsonn['is_processed'] != null ? jsonn['is_processed'] as bool : null,
      processedAt: jsonn['processed_at'] != null
          ? DateTime.parse(jsonn['processed_at'].toString())
          : null,
      createdAt: jsonn['created_at'] != null
          ? DateTime.parse(jsonn['created_at'].toString())
          : null,
    );
  }

  static Object New({
    String? id,
    String? userId,
    String? messageId,
    String? recommendationId,
    String? healthCardId,
    String? feedbackType,
    int? rating,
    String? content,
    Map<String, dynamic>? context,
    bool? isProcessed,
    DateTime? processedAt,
    DateTime? createdAt,
  }) {
    return {
      if (id != null) 'id': id,
      if (userId != null) 'user_id': userId,
      if (messageId != null) 'message_id': messageId,
      if (recommendationId != null) 'recommendation_id': recommendationId,
      if (healthCardId != null) 'health_card_id': healthCardId,
      if (feedbackType != null) 'feedback_type': feedbackType,
      if (rating != null) 'rating': rating,
      if (content != null) 'content': content,
      if (context != null) 'context': context,
      if (isProcessed != null) 'is_processed': isProcessed,
      if (processedAt != null) 'processed_at': processedAt,
      if (createdAt != null) 'created_at': createdAt,
    };
  }

  Map<String, dynamic> toJson() {
    return _generateMap(
      id: id,
      userId: userId,
      messageId: messageId,
      recommendationId: recommendationId,
      healthCardId: healthCardId,
      feedbackType: feedbackType,
      rating: rating,
      content: content,
      context: context,
      isProcessed: isProcessed,
      processedAt: processedAt,
      createdAt: createdAt,
    );
  }

  static const _unset = Object();
  UserFeedback copyWith({
    Object? id = _unset,
    Object? userId = _unset,
    Object? messageId = _unset,
    Object? recommendationId = _unset,
    Object? healthCardId = _unset,
    Object? feedbackType = _unset,
    Object? rating = _unset,
    Object? content = _unset,
    Object? context = _unset,
    Object? isProcessed = _unset,
    Object? processedAt = _unset,
    Object? createdAt = _unset,
  }) {
    return UserFeedback(
      id: id == _unset ? this.id : id as String,
      userId: userId == _unset ? this.userId : userId as String,
      messageId: messageId == _unset ? this.messageId : messageId as String?,
      recommendationId: recommendationId == _unset
          ? this.recommendationId
          : recommendationId as String?,
      healthCardId:
          healthCardId == _unset ? this.healthCardId : healthCardId as String?,
      feedbackType:
          feedbackType == _unset ? this.feedbackType : feedbackType as String,
      rating: rating == _unset ? this.rating : rating as int?,
      content: content == _unset ? this.content : content as String?,
      context:
          context == _unset ? this.context : context as Map<String, dynamic>?,
      isProcessed:
          isProcessed == _unset ? this.isProcessed : isProcessed as bool?,
      processedAt:
          processedAt == _unset ? this.processedAt : processedAt as DateTime?,
      createdAt: createdAt == _unset ? this.createdAt : createdAt as DateTime?,
    );
  }
}
