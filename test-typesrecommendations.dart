// ignore_for_file: non_constant_identifier_names, camel_case_types, file_namesimport, file_names, unnecessary_null_comparison, prefer_null_aware_operators
// WARNING: This code is auto-generated by Supadart.
// WARNING: Modifications may be overwritten. Please make changes in the Supadart configuration.
import 'supadart_header.dart';

class Recommendations implements SupadartClass<Recommendations> {
  final String id;
  final String userId;
  final String? categoryId;
  final String? checkinMessageId;
  final String? parentRecommendationId;
  final String? title;
  final String recommendationText;
  final String? action;
  final String? why;
  final String recommendationType;
  final int? importance;
  final num? relevance;
  final List<String>? recommendedCategories;
  final String? context;
  final bool? isActive;
  final DateTime? viewedAt;
  final DateTime? dismissedAt;
  final DateTime? createdAt;
  final Map<String, dynamic>? metadata;
  final DateTime? expiresAt;
  final int? level;
  final int? viewCount;
  final DateTime? lastViewedAt;
  final DateTime? updatedAt;

  const Recommendations({
    required this.id,
    required this.userId,
    this.categoryId,
    this.checkinMessageId,
    this.parentRecommendationId,
    this.title,
    required this.recommendationText,
    this.action,
    this.why,
    required this.recommendationType,
    this.importance,
    this.relevance,
    this.recommendedCategories,
    this.context,
    this.isActive,
    this.viewedAt,
    this.dismissedAt,
    this.createdAt,
    this.metadata,
    this.expiresAt,
    this.level,
    this.viewCount,
    this.lastViewedAt,
    this.updatedAt,
  });

  static String get table_name => 'recommendations';
  static String get c_id => 'id';
  static String get c_userId => 'user_id';
  static String get c_categoryId => 'category_id';
  static String get c_checkinMessageId => 'checkin_message_id';
  static String get c_parentRecommendationId => 'parent_recommendation_id';
  static String get c_title => 'title';
  static String get c_recommendationText => 'recommendation_text';
  static String get c_action => 'action';
  static String get c_why => 'why';
  static String get c_recommendationType => 'recommendation_type';
  static String get c_importance => 'importance';
  static String get c_relevance => 'relevance';
  static String get c_recommendedCategories => 'recommended_categories';
  static String get c_context => 'context';
  static String get c_isActive => 'is_active';
  static String get c_viewedAt => 'viewed_at';
  static String get c_dismissedAt => 'dismissed_at';
  static String get c_createdAt => 'created_at';
  static String get c_metadata => 'metadata';
  static String get c_expiresAt => 'expires_at';
  static String get c_level => 'level';
  static String get c_viewCount => 'view_count';
  static String get c_lastViewedAt => 'last_viewed_at';
  static String get c_updatedAt => 'updated_at';

  static List<Recommendations> converter(List<Map<String, dynamic>> data) {
    return data.map(Recommendations.fromJson).toList();
  }

  static Recommendations converterSingle(Map<String, dynamic> data) {
    return Recommendations.fromJson(data);
  }

  static Map<String, dynamic> _generateMap({
    String? id,
    String? userId,
    String? categoryId,
    String? checkinMessageId,
    String? parentRecommendationId,
    String? title,
    String? recommendationText,
    String? action,
    String? why,
    String? recommendationType,
    int? importance,
    num? relevance,
    List<String>? recommendedCategories,
    String? context,
    bool? isActive,
    DateTime? viewedAt,
    DateTime? dismissedAt,
    DateTime? createdAt,
    Map<String, dynamic>? metadata,
    DateTime? expiresAt,
    int? level,
    int? viewCount,
    DateTime? lastViewedAt,
    DateTime? updatedAt,
  }) {
    return {
      if (id != null) 'id': id,
      if (userId != null) 'user_id': userId,
      if (categoryId != null) 'category_id': categoryId,
      if (checkinMessageId != null) 'checkin_message_id': checkinMessageId,
      if (parentRecommendationId != null)
        'parent_recommendation_id': parentRecommendationId,
      if (title != null) 'title': title,
      if (recommendationText != null) 'recommendation_text': recommendationText,
      if (action != null) 'action': action,
      if (why != null) 'why': why,
      if (recommendationType != null) 'recommendation_type': recommendationType,
      if (importance != null) 'importance': importance,
      if (relevance != null) 'relevance': relevance.toString(),
      if (recommendedCategories != null)
        'recommended_categories': recommendedCategories.map((e) => e).toList(),
      if (context != null) 'context': context,
      if (isActive != null) 'is_active': isActive,
      if (viewedAt != null) 'viewed_at': viewedAt.toUtc().toIso8601String(),
      if (dismissedAt != null)
        'dismissed_at': dismissedAt.toUtc().toIso8601String(),
      if (createdAt != null) 'created_at': createdAt.toUtc().toIso8601String(),
      if (metadata != null) 'metadata': metadata,
      if (expiresAt != null) 'expires_at': expiresAt.toUtc().toIso8601String(),
      if (level != null) 'level': level,
      if (viewCount != null) 'view_count': viewCount,
      if (lastViewedAt != null)
        'last_viewed_at': lastViewedAt.toUtc().toIso8601String(),
      if (updatedAt != null) 'updated_at': updatedAt.toUtc().toIso8601String(),
    };
  }

  static Map<String, dynamic> insert({
    String? id,
    required String userId,
    String? categoryId,
    String? checkinMessageId,
    String? parentRecommendationId,
    String? title,
    required String recommendationText,
    String? action,
    String? why,
    required String recommendationType,
    int? importance,
    num? relevance,
    List<String>? recommendedCategories,
    String? context,
    bool? isActive,
    DateTime? viewedAt,
    DateTime? dismissedAt,
    DateTime? createdAt,
    Map<String, dynamic>? metadata,
    DateTime? expiresAt,
    int? level,
    int? viewCount,
    DateTime? lastViewedAt,
    DateTime? updatedAt,
  }) {
    return _generateMap(
      id: id,
      userId: userId,
      categoryId: categoryId,
      checkinMessageId: checkinMessageId,
      parentRecommendationId: parentRecommendationId,
      title: title,
      recommendationText: recommendationText,
      action: action,
      why: why,
      recommendationType: recommendationType,
      importance: importance,
      relevance: relevance,
      recommendedCategories: recommendedCategories,
      context: context,
      isActive: isActive,
      viewedAt: viewedAt,
      dismissedAt: dismissedAt,
      createdAt: createdAt,
      metadata: metadata,
      expiresAt: expiresAt,
      level: level,
      viewCount: viewCount,
      lastViewedAt: lastViewedAt,
      updatedAt: updatedAt,
    );
  }

  static Map<String, dynamic> update({
    String? id,
    String? userId,
    String? categoryId,
    String? checkinMessageId,
    String? parentRecommendationId,
    String? title,
    String? recommendationText,
    String? action,
    String? why,
    String? recommendationType,
    int? importance,
    num? relevance,
    List<String>? recommendedCategories,
    String? context,
    bool? isActive,
    DateTime? viewedAt,
    DateTime? dismissedAt,
    DateTime? createdAt,
    Map<String, dynamic>? metadata,
    DateTime? expiresAt,
    int? level,
    int? viewCount,
    DateTime? lastViewedAt,
    DateTime? updatedAt,
  }) {
    return _generateMap(
      id: id,
      userId: userId,
      categoryId: categoryId,
      checkinMessageId: checkinMessageId,
      parentRecommendationId: parentRecommendationId,
      title: title,
      recommendationText: recommendationText,
      action: action,
      why: why,
      recommendationType: recommendationType,
      importance: importance,
      relevance: relevance,
      recommendedCategories: recommendedCategories,
      context: context,
      isActive: isActive,
      viewedAt: viewedAt,
      dismissedAt: dismissedAt,
      createdAt: createdAt,
      metadata: metadata,
      expiresAt: expiresAt,
      level: level,
      viewCount: viewCount,
      lastViewedAt: lastViewedAt,
      updatedAt: updatedAt,
    );
  }

  factory Recommendations.fromJson(Map<String, dynamic> jsonn) {
    return Recommendations(
      id: jsonn['id'] != null ? jsonn['id'].toString() : '',
      userId: jsonn['user_id'] != null ? jsonn['user_id'].toString() : '',
      categoryId:
          jsonn['category_id'] != null ? jsonn['category_id'].toString() : null,
      checkinMessageId: jsonn['checkin_message_id'] != null
          ? jsonn['checkin_message_id'].toString()
          : null,
      parentRecommendationId: jsonn['parent_recommendation_id'] != null
          ? jsonn['parent_recommendation_id'].toString()
          : null,
      title: jsonn['title'] != null ? jsonn['title'].toString() : null,
      recommendationText: jsonn['recommendation_text'] != null
          ? jsonn['recommendation_text'].toString()
          : '',
      action: jsonn['action'] != null ? jsonn['action'].toString() : null,
      why: jsonn['why'] != null ? jsonn['why'].toString() : null,
      recommendationType: jsonn['recommendation_type'] != null
          ? jsonn['recommendation_type'].toString()
          : '',
      importance: jsonn['importance'] != null
          ? int.parse(jsonn['importance'].toString())
          : null,
      relevance: jsonn['relevance'] != null
          ? num.parse(jsonn['relevance'].toString())
          : null,
      recommendedCategories: jsonn['recommended_categories'] != null
          ? (jsonn['recommended_categories'] as List<dynamic>)
              .map((v) => v.toString())
              .toList()
          : null,
      context: jsonn['context'] != null ? jsonn['context'].toString() : null,
      isActive: jsonn['is_active'] != null ? jsonn['is_active'] as bool : null,
      viewedAt: jsonn['viewed_at'] != null
          ? DateTime.parse(jsonn['viewed_at'].toString())
          : null,
      dismissedAt: jsonn['dismissed_at'] != null
          ? DateTime.parse(jsonn['dismissed_at'].toString())
          : null,
      createdAt: jsonn['created_at'] != null
          ? DateTime.parse(jsonn['created_at'].toString())
          : null,
      metadata: jsonn['metadata'] != null
          ? jsonn['metadata'] as Map<String, dynamic>
          : null,
      expiresAt: jsonn['expires_at'] != null
          ? DateTime.parse(jsonn['expires_at'].toString())
          : null,
      level:
          jsonn['level'] != null ? int.parse(jsonn['level'].toString()) : null,
      viewCount: jsonn['view_count'] != null
          ? int.parse(jsonn['view_count'].toString())
          : null,
      lastViewedAt: jsonn['last_viewed_at'] != null
          ? DateTime.parse(jsonn['last_viewed_at'].toString())
          : null,
      updatedAt: jsonn['updated_at'] != null
          ? DateTime.parse(jsonn['updated_at'].toString())
          : null,
    );
  }

  static Object New({
    String? id,
    String? userId,
    String? categoryId,
    String? checkinMessageId,
    String? parentRecommendationId,
    String? title,
    String? recommendationText,
    String? action,
    String? why,
    String? recommendationType,
    int? importance,
    num? relevance,
    List<String>? recommendedCategories,
    String? context,
    bool? isActive,
    DateTime? viewedAt,
    DateTime? dismissedAt,
    DateTime? createdAt,
    Map<String, dynamic>? metadata,
    DateTime? expiresAt,
    int? level,
    int? viewCount,
    DateTime? lastViewedAt,
    DateTime? updatedAt,
  }) {
    return {
      if (id != null) 'id': id,
      if (userId != null) 'user_id': userId,
      if (categoryId != null) 'category_id': categoryId,
      if (checkinMessageId != null) 'checkin_message_id': checkinMessageId,
      if (parentRecommendationId != null)
        'parent_recommendation_id': parentRecommendationId,
      if (title != null) 'title': title,
      if (recommendationText != null) 'recommendation_text': recommendationText,
      if (action != null) 'action': action,
      if (why != null) 'why': why,
      if (recommendationType != null) 'recommendation_type': recommendationType,
      if (importance != null) 'importance': importance,
      if (relevance != null) 'relevance': relevance,
      if (recommendedCategories != null)
        'recommended_categories': recommendedCategories,
      if (context != null) 'context': context,
      if (isActive != null) 'is_active': isActive,
      if (viewedAt != null) 'viewed_at': viewedAt,
      if (dismissedAt != null) 'dismissed_at': dismissedAt,
      if (createdAt != null) 'created_at': createdAt,
      if (metadata != null) 'metadata': metadata,
      if (expiresAt != null) 'expires_at': expiresAt,
      if (level != null) 'level': level,
      if (viewCount != null) 'view_count': viewCount,
      if (lastViewedAt != null) 'last_viewed_at': lastViewedAt,
      if (updatedAt != null) 'updated_at': updatedAt,
    };
  }

  Map<String, dynamic> toJson() {
    return _generateMap(
      id: id,
      userId: userId,
      categoryId: categoryId,
      checkinMessageId: checkinMessageId,
      parentRecommendationId: parentRecommendationId,
      title: title,
      recommendationText: recommendationText,
      action: action,
      why: why,
      recommendationType: recommendationType,
      importance: importance,
      relevance: relevance,
      recommendedCategories: recommendedCategories,
      context: context,
      isActive: isActive,
      viewedAt: viewedAt,
      dismissedAt: dismissedAt,
      createdAt: createdAt,
      metadata: metadata,
      expiresAt: expiresAt,
      level: level,
      viewCount: viewCount,
      lastViewedAt: lastViewedAt,
      updatedAt: updatedAt,
    );
  }

  static const _unset = Object();
  Recommendations copyWith({
    Object? id = _unset,
    Object? userId = _unset,
    Object? categoryId = _unset,
    Object? checkinMessageId = _unset,
    Object? parentRecommendationId = _unset,
    Object? title = _unset,
    Object? recommendationText = _unset,
    Object? action = _unset,
    Object? why = _unset,
    Object? recommendationType = _unset,
    Object? importance = _unset,
    Object? relevance = _unset,
    Object? recommendedCategories = _unset,
    Object? context = _unset,
    Object? isActive = _unset,
    Object? viewedAt = _unset,
    Object? dismissedAt = _unset,
    Object? createdAt = _unset,
    Object? metadata = _unset,
    Object? expiresAt = _unset,
    Object? level = _unset,
    Object? viewCount = _unset,
    Object? lastViewedAt = _unset,
    Object? updatedAt = _unset,
  }) {
    return Recommendations(
      id: id == _unset ? this.id : id as String,
      userId: userId == _unset ? this.userId : userId as String,
      categoryId:
          categoryId == _unset ? this.categoryId : categoryId as String?,
      checkinMessageId: checkinMessageId == _unset
          ? this.checkinMessageId
          : checkinMessageId as String?,
      parentRecommendationId: parentRecommendationId == _unset
          ? this.parentRecommendationId
          : parentRecommendationId as String?,
      title: title == _unset ? this.title : title as String?,
      recommendationText: recommendationText == _unset
          ? this.recommendationText
          : recommendationText as String,
      action: action == _unset ? this.action : action as String?,
      why: why == _unset ? this.why : why as String?,
      recommendationType: recommendationType == _unset
          ? this.recommendationType
          : recommendationType as String,
      importance: importance == _unset ? this.importance : importance as int?,
      relevance: relevance == _unset ? this.relevance : relevance as num?,
      recommendedCategories: recommendedCategories == _unset
          ? this.recommendedCategories
          : recommendedCategories as List<String>?,
      context: context == _unset ? this.context : context as String?,
      isActive: isActive == _unset ? this.isActive : isActive as bool?,
      viewedAt: viewedAt == _unset ? this.viewedAt : viewedAt as DateTime?,
      dismissedAt:
          dismissedAt == _unset ? this.dismissedAt : dismissedAt as DateTime?,
      createdAt: createdAt == _unset ? this.createdAt : createdAt as DateTime?,
      metadata: metadata == _unset
          ? this.metadata
          : metadata as Map<String, dynamic>?,
      expiresAt: expiresAt == _unset ? this.expiresAt : expiresAt as DateTime?,
      level: level == _unset ? this.level : level as int?,
      viewCount: viewCount == _unset ? this.viewCount : viewCount as int?,
      lastViewedAt: lastViewedAt == _unset
          ? this.lastViewedAt
          : lastViewedAt as DateTime?,
      updatedAt: updatedAt == _unset ? this.updatedAt : updatedAt as DateTime?,
    );
  }
}
