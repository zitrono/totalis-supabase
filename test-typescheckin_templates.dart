// ignore_for_file: non_constant_identifier_names, camel_case_types, file_namesimport, file_names, unnecessary_null_comparison, prefer_null_aware_operators
// WARNING: This code is auto-generated by Supadart.
// WARNING: Modifications may be overwritten. Please make changes in the Supadart configuration.
import 'supadart_header.dart';

class CheckinTemplates implements SupadartClass<CheckinTemplates> {
  final String id;
  final String categoryId;
  final Map<String, dynamic> questions;
  final bool? isActive;
  final DateTime createdAt;
  final DateTime updatedAt;

  const CheckinTemplates({
    required this.id,
    required this.categoryId,
    required this.questions,
    this.isActive,
    required this.createdAt,
    required this.updatedAt,
  });

  static String get table_name => 'checkin_templates';
  static String get c_id => 'id';
  static String get c_categoryId => 'category_id';
  static String get c_questions => 'questions';
  static String get c_isActive => 'is_active';
  static String get c_createdAt => 'created_at';
  static String get c_updatedAt => 'updated_at';

  static List<CheckinTemplates> converter(List<Map<String, dynamic>> data) {
    return data.map(CheckinTemplates.fromJson).toList();
  }

  static CheckinTemplates converterSingle(Map<String, dynamic> data) {
    return CheckinTemplates.fromJson(data);
  }

  static Map<String, dynamic> _generateMap({
    String? id,
    String? categoryId,
    Map<String, dynamic>? questions,
    bool? isActive,
    DateTime? createdAt,
    DateTime? updatedAt,
  }) {
    return {
      if (id != null) 'id': id,
      if (categoryId != null) 'category_id': categoryId,
      if (questions != null) 'questions': questions,
      if (isActive != null) 'is_active': isActive,
      if (createdAt != null) 'created_at': createdAt.toUtc().toIso8601String(),
      if (updatedAt != null) 'updated_at': updatedAt.toUtc().toIso8601String(),
    };
  }

  static Map<String, dynamic> insert({
    String? id,
    required String categoryId,
    required Map<String, dynamic> questions,
    bool? isActive,
    DateTime? createdAt,
    DateTime? updatedAt,
  }) {
    return _generateMap(
      id: id,
      categoryId: categoryId,
      questions: questions,
      isActive: isActive,
      createdAt: createdAt,
      updatedAt: updatedAt,
    );
  }

  static Map<String, dynamic> update({
    String? id,
    String? categoryId,
    Map<String, dynamic>? questions,
    bool? isActive,
    DateTime? createdAt,
    DateTime? updatedAt,
  }) {
    return _generateMap(
      id: id,
      categoryId: categoryId,
      questions: questions,
      isActive: isActive,
      createdAt: createdAt,
      updatedAt: updatedAt,
    );
  }

  factory CheckinTemplates.fromJson(Map<String, dynamic> jsonn) {
    return CheckinTemplates(
      id: jsonn['id'] != null ? jsonn['id'].toString() : '',
      categoryId:
          jsonn['category_id'] != null ? jsonn['category_id'].toString() : '',
      questions: jsonn['questions'] != null
          ? jsonn['questions'] as Map<String, dynamic>
          : <String, dynamic>{},
      isActive: jsonn['is_active'] != null ? jsonn['is_active'] as bool : null,
      createdAt: jsonn['created_at'] != null
          ? DateTime.parse(jsonn['created_at'].toString())
          : DateTime.fromMillisecondsSinceEpoch(0),
      updatedAt: jsonn['updated_at'] != null
          ? DateTime.parse(jsonn['updated_at'].toString())
          : DateTime.fromMillisecondsSinceEpoch(0),
    );
  }

  static Object New({
    String? id,
    String? categoryId,
    Map<String, dynamic>? questions,
    bool? isActive,
    DateTime? createdAt,
    DateTime? updatedAt,
  }) {
    return {
      if (id != null) 'id': id,
      if (categoryId != null) 'category_id': categoryId,
      if (questions != null) 'questions': questions,
      if (isActive != null) 'is_active': isActive,
      if (createdAt != null) 'created_at': createdAt,
      if (updatedAt != null) 'updated_at': updatedAt,
    };
  }

  Map<String, dynamic> toJson() {
    return _generateMap(
      id: id,
      categoryId: categoryId,
      questions: questions,
      isActive: isActive,
      createdAt: createdAt,
      updatedAt: updatedAt,
    );
  }

  static const _unset = Object();
  CheckinTemplates copyWith({
    Object? id = _unset,
    Object? categoryId = _unset,
    Object? questions = _unset,
    Object? isActive = _unset,
    Object? createdAt = _unset,
    Object? updatedAt = _unset,
  }) {
    return CheckinTemplates(
      id: id == _unset ? this.id : id as String,
      categoryId: categoryId == _unset ? this.categoryId : categoryId as String,
      questions: questions == _unset
          ? this.questions
          : questions as Map<String, dynamic>,
      isActive: isActive == _unset ? this.isActive : isActive as bool?,
      createdAt: createdAt == _unset ? this.createdAt : createdAt as DateTime,
      updatedAt: updatedAt == _unset ? this.updatedAt : updatedAt as DateTime,
    );
  }
}
