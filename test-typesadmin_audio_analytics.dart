// ignore_for_file: non_constant_identifier_names, camel_case_types, file_namesimport, file_names, unnecessary_null_comparison, prefer_null_aware_operators
// WARNING: This code is auto-generated by Supadart.
// WARNING: Modifications may be overwritten. Please make changes in the Supadart configuration.
import 'supadart_header.dart';

class AdminAudioAnalytics implements SupadartClass<AdminAudioAnalytics> {
  final DateTime? hour;
  final BigInt? uniqueUsers;
  final BigInt? totalRequests;
  final BigInt? successfulRequests;
  final BigInt? failedRequests;
  final BigInt? totalBytesProcessed;
  final int? avgProcessingTimeMs;
  final int? maxProcessingTimeMs;
  final BigInt? totalCharactersTranscribed;
  final num? avgFileSizeMb;

  const AdminAudioAnalytics({
    this.hour,
    this.uniqueUsers,
    this.totalRequests,
    this.successfulRequests,
    this.failedRequests,
    this.totalBytesProcessed,
    this.avgProcessingTimeMs,
    this.maxProcessingTimeMs,
    this.totalCharactersTranscribed,
    this.avgFileSizeMb,
  });

  static String get table_name => 'admin_audio_analytics';
  static String get c_hour => 'hour';
  static String get c_uniqueUsers => 'unique_users';
  static String get c_totalRequests => 'total_requests';
  static String get c_successfulRequests => 'successful_requests';
  static String get c_failedRequests => 'failed_requests';
  static String get c_totalBytesProcessed => 'total_bytes_processed';
  static String get c_avgProcessingTimeMs => 'avg_processing_time_ms';
  static String get c_maxProcessingTimeMs => 'max_processing_time_ms';
  static String get c_totalCharactersTranscribed =>
      'total_characters_transcribed';
  static String get c_avgFileSizeMb => 'avg_file_size_mb';

  static List<AdminAudioAnalytics> converter(List<Map<String, dynamic>> data) {
    return data.map(AdminAudioAnalytics.fromJson).toList();
  }

  static AdminAudioAnalytics converterSingle(Map<String, dynamic> data) {
    return AdminAudioAnalytics.fromJson(data);
  }

  static Map<String, dynamic> _generateMap({
    DateTime? hour,
    BigInt? uniqueUsers,
    BigInt? totalRequests,
    BigInt? successfulRequests,
    BigInt? failedRequests,
    BigInt? totalBytesProcessed,
    int? avgProcessingTimeMs,
    int? maxProcessingTimeMs,
    BigInt? totalCharactersTranscribed,
    num? avgFileSizeMb,
  }) {
    return {
      if (hour != null) 'hour': hour.toUtc().toIso8601String(),
      if (uniqueUsers != null) 'unique_users': uniqueUsers.toString(),
      if (totalRequests != null) 'total_requests': totalRequests.toString(),
      if (successfulRequests != null)
        'successful_requests': successfulRequests.toString(),
      if (failedRequests != null) 'failed_requests': failedRequests.toString(),
      if (totalBytesProcessed != null)
        'total_bytes_processed': totalBytesProcessed.toString(),
      if (avgProcessingTimeMs != null)
        'avg_processing_time_ms': avgProcessingTimeMs,
      if (maxProcessingTimeMs != null)
        'max_processing_time_ms': maxProcessingTimeMs,
      if (totalCharactersTranscribed != null)
        'total_characters_transcribed': totalCharactersTranscribed.toString(),
      if (avgFileSizeMb != null) 'avg_file_size_mb': avgFileSizeMb.toString(),
    };
  }

  static Map<String, dynamic> insert({
    DateTime? hour,
    BigInt? uniqueUsers,
    BigInt? totalRequests,
    BigInt? successfulRequests,
    BigInt? failedRequests,
    BigInt? totalBytesProcessed,
    int? avgProcessingTimeMs,
    int? maxProcessingTimeMs,
    BigInt? totalCharactersTranscribed,
    num? avgFileSizeMb,
  }) {
    return _generateMap(
      hour: hour,
      uniqueUsers: uniqueUsers,
      totalRequests: totalRequests,
      successfulRequests: successfulRequests,
      failedRequests: failedRequests,
      totalBytesProcessed: totalBytesProcessed,
      avgProcessingTimeMs: avgProcessingTimeMs,
      maxProcessingTimeMs: maxProcessingTimeMs,
      totalCharactersTranscribed: totalCharactersTranscribed,
      avgFileSizeMb: avgFileSizeMb,
    );
  }

  static Map<String, dynamic> update({
    DateTime? hour,
    BigInt? uniqueUsers,
    BigInt? totalRequests,
    BigInt? successfulRequests,
    BigInt? failedRequests,
    BigInt? totalBytesProcessed,
    int? avgProcessingTimeMs,
    int? maxProcessingTimeMs,
    BigInt? totalCharactersTranscribed,
    num? avgFileSizeMb,
  }) {
    return _generateMap(
      hour: hour,
      uniqueUsers: uniqueUsers,
      totalRequests: totalRequests,
      successfulRequests: successfulRequests,
      failedRequests: failedRequests,
      totalBytesProcessed: totalBytesProcessed,
      avgProcessingTimeMs: avgProcessingTimeMs,
      maxProcessingTimeMs: maxProcessingTimeMs,
      totalCharactersTranscribed: totalCharactersTranscribed,
      avgFileSizeMb: avgFileSizeMb,
    );
  }

  factory AdminAudioAnalytics.fromJson(Map<String, dynamic> jsonn) {
    return AdminAudioAnalytics(
      hour: jsonn['hour'] != null
          ? DateTime.parse(jsonn['hour'].toString())
          : null,
      uniqueUsers: jsonn['unique_users'] != null
          ? BigInt.parse(jsonn['unique_users'].toString())
          : null,
      totalRequests: jsonn['total_requests'] != null
          ? BigInt.parse(jsonn['total_requests'].toString())
          : null,
      successfulRequests: jsonn['successful_requests'] != null
          ? BigInt.parse(jsonn['successful_requests'].toString())
          : null,
      failedRequests: jsonn['failed_requests'] != null
          ? BigInt.parse(jsonn['failed_requests'].toString())
          : null,
      totalBytesProcessed: jsonn['total_bytes_processed'] != null
          ? BigInt.parse(jsonn['total_bytes_processed'].toString())
          : null,
      avgProcessingTimeMs: jsonn['avg_processing_time_ms'] != null
          ? int.parse(jsonn['avg_processing_time_ms'].toString())
          : null,
      maxProcessingTimeMs: jsonn['max_processing_time_ms'] != null
          ? int.parse(jsonn['max_processing_time_ms'].toString())
          : null,
      totalCharactersTranscribed: jsonn['total_characters_transcribed'] != null
          ? BigInt.parse(jsonn['total_characters_transcribed'].toString())
          : null,
      avgFileSizeMb: jsonn['avg_file_size_mb'] != null
          ? num.parse(jsonn['avg_file_size_mb'].toString())
          : null,
    );
  }

  static Object New({
    DateTime? hour,
    BigInt? uniqueUsers,
    BigInt? totalRequests,
    BigInt? successfulRequests,
    BigInt? failedRequests,
    BigInt? totalBytesProcessed,
    int? avgProcessingTimeMs,
    int? maxProcessingTimeMs,
    BigInt? totalCharactersTranscribed,
    num? avgFileSizeMb,
  }) {
    return {
      if (hour != null) 'hour': hour,
      if (uniqueUsers != null) 'unique_users': uniqueUsers,
      if (totalRequests != null) 'total_requests': totalRequests,
      if (successfulRequests != null) 'successful_requests': successfulRequests,
      if (failedRequests != null) 'failed_requests': failedRequests,
      if (totalBytesProcessed != null)
        'total_bytes_processed': totalBytesProcessed,
      if (avgProcessingTimeMs != null)
        'avg_processing_time_ms': avgProcessingTimeMs,
      if (maxProcessingTimeMs != null)
        'max_processing_time_ms': maxProcessingTimeMs,
      if (totalCharactersTranscribed != null)
        'total_characters_transcribed': totalCharactersTranscribed,
      if (avgFileSizeMb != null) 'avg_file_size_mb': avgFileSizeMb,
    };
  }

  Map<String, dynamic> toJson() {
    return _generateMap(
      hour: hour,
      uniqueUsers: uniqueUsers,
      totalRequests: totalRequests,
      successfulRequests: successfulRequests,
      failedRequests: failedRequests,
      totalBytesProcessed: totalBytesProcessed,
      avgProcessingTimeMs: avgProcessingTimeMs,
      maxProcessingTimeMs: maxProcessingTimeMs,
      totalCharactersTranscribed: totalCharactersTranscribed,
      avgFileSizeMb: avgFileSizeMb,
    );
  }

  static const _unset = Object();
  AdminAudioAnalytics copyWith({
    Object? hour = _unset,
    Object? uniqueUsers = _unset,
    Object? totalRequests = _unset,
    Object? successfulRequests = _unset,
    Object? failedRequests = _unset,
    Object? totalBytesProcessed = _unset,
    Object? avgProcessingTimeMs = _unset,
    Object? maxProcessingTimeMs = _unset,
    Object? totalCharactersTranscribed = _unset,
    Object? avgFileSizeMb = _unset,
  }) {
    return AdminAudioAnalytics(
      hour: hour == _unset ? this.hour : hour as DateTime?,
      uniqueUsers:
          uniqueUsers == _unset ? this.uniqueUsers : uniqueUsers as BigInt?,
      totalRequests: totalRequests == _unset
          ? this.totalRequests
          : totalRequests as BigInt?,
      successfulRequests: successfulRequests == _unset
          ? this.successfulRequests
          : successfulRequests as BigInt?,
      failedRequests: failedRequests == _unset
          ? this.failedRequests
          : failedRequests as BigInt?,
      totalBytesProcessed: totalBytesProcessed == _unset
          ? this.totalBytesProcessed
          : totalBytesProcessed as BigInt?,
      avgProcessingTimeMs: avgProcessingTimeMs == _unset
          ? this.avgProcessingTimeMs
          : avgProcessingTimeMs as int?,
      maxProcessingTimeMs: maxProcessingTimeMs == _unset
          ? this.maxProcessingTimeMs
          : maxProcessingTimeMs as int?,
      totalCharactersTranscribed: totalCharactersTranscribed == _unset
          ? this.totalCharactersTranscribed
          : totalCharactersTranscribed as BigInt?,
      avgFileSizeMb:
          avgFileSizeMb == _unset ? this.avgFileSizeMb : avgFileSizeMb as num?,
    );
  }
}
