// ignore_for_file: non_constant_identifier_names, camel_case_types, file_namesimport, file_names, unnecessary_null_comparison, prefer_null_aware_operators
// WARNING: This code is auto-generated by Supadart.
// WARNING: Modifications may be overwritten. Please make changes in the Supadart configuration.
import 'supadart_header.dart';

class CheckinProgress implements SupadartClass<CheckinProgress> {
  final String id;
  final String userId;
  final String checkinId;
  final int? currentQuestionIndex;
  final Map<String, dynamic>? answers;
  final String? status;
  final DateTime? createdAt;
  final DateTime? updatedAt;

  const CheckinProgress({
    required this.id,
    required this.userId,
    required this.checkinId,
    this.currentQuestionIndex,
    this.answers,
    this.status,
    this.createdAt,
    this.updatedAt,
  });

  static String get table_name => 'checkin_progress';
  static String get c_id => 'id';
  static String get c_userId => 'user_id';
  static String get c_checkinId => 'checkin_id';
  static String get c_currentQuestionIndex => 'current_question_index';
  static String get c_answers => 'answers';
  static String get c_status => 'status';
  static String get c_createdAt => 'created_at';
  static String get c_updatedAt => 'updated_at';

  static List<CheckinProgress> converter(List<Map<String, dynamic>> data) {
    return data.map(CheckinProgress.fromJson).toList();
  }

  static CheckinProgress converterSingle(Map<String, dynamic> data) {
    return CheckinProgress.fromJson(data);
  }

  static Map<String, dynamic> _generateMap({
    String? id,
    String? userId,
    String? checkinId,
    int? currentQuestionIndex,
    Map<String, dynamic>? answers,
    String? status,
    DateTime? createdAt,
    DateTime? updatedAt,
  }) {
    return {
      if (id != null) 'id': id,
      if (userId != null) 'user_id': userId,
      if (checkinId != null) 'checkin_id': checkinId,
      if (currentQuestionIndex != null)
        'current_question_index': currentQuestionIndex,
      if (answers != null) 'answers': answers,
      if (status != null) 'status': status,
      if (createdAt != null) 'created_at': createdAt.toUtc().toIso8601String(),
      if (updatedAt != null) 'updated_at': updatedAt.toUtc().toIso8601String(),
    };
  }

  static Map<String, dynamic> insert({
    String? id,
    required String userId,
    required String checkinId,
    int? currentQuestionIndex,
    Map<String, dynamic>? answers,
    String? status,
    DateTime? createdAt,
    DateTime? updatedAt,
  }) {
    return _generateMap(
      id: id,
      userId: userId,
      checkinId: checkinId,
      currentQuestionIndex: currentQuestionIndex,
      answers: answers,
      status: status,
      createdAt: createdAt,
      updatedAt: updatedAt,
    );
  }

  static Map<String, dynamic> update({
    String? id,
    String? userId,
    String? checkinId,
    int? currentQuestionIndex,
    Map<String, dynamic>? answers,
    String? status,
    DateTime? createdAt,
    DateTime? updatedAt,
  }) {
    return _generateMap(
      id: id,
      userId: userId,
      checkinId: checkinId,
      currentQuestionIndex: currentQuestionIndex,
      answers: answers,
      status: status,
      createdAt: createdAt,
      updatedAt: updatedAt,
    );
  }

  factory CheckinProgress.fromJson(Map<String, dynamic> jsonn) {
    return CheckinProgress(
      id: jsonn['id'] != null ? jsonn['id'].toString() : '',
      userId: jsonn['user_id'] != null ? jsonn['user_id'].toString() : '',
      checkinId:
          jsonn['checkin_id'] != null ? jsonn['checkin_id'].toString() : '',
      currentQuestionIndex: jsonn['current_question_index'] != null
          ? int.parse(jsonn['current_question_index'].toString())
          : null,
      answers: jsonn['answers'] != null
          ? jsonn['answers'] as Map<String, dynamic>
          : null,
      status: jsonn['status'] != null ? jsonn['status'].toString() : null,
      createdAt: jsonn['created_at'] != null
          ? DateTime.parse(jsonn['created_at'].toString())
          : null,
      updatedAt: jsonn['updated_at'] != null
          ? DateTime.parse(jsonn['updated_at'].toString())
          : null,
    );
  }

  static Object New({
    String? id,
    String? userId,
    String? checkinId,
    int? currentQuestionIndex,
    Map<String, dynamic>? answers,
    String? status,
    DateTime? createdAt,
    DateTime? updatedAt,
  }) {
    return {
      if (id != null) 'id': id,
      if (userId != null) 'user_id': userId,
      if (checkinId != null) 'checkin_id': checkinId,
      if (currentQuestionIndex != null)
        'current_question_index': currentQuestionIndex,
      if (answers != null) 'answers': answers,
      if (status != null) 'status': status,
      if (createdAt != null) 'created_at': createdAt,
      if (updatedAt != null) 'updated_at': updatedAt,
    };
  }

  Map<String, dynamic> toJson() {
    return _generateMap(
      id: id,
      userId: userId,
      checkinId: checkinId,
      currentQuestionIndex: currentQuestionIndex,
      answers: answers,
      status: status,
      createdAt: createdAt,
      updatedAt: updatedAt,
    );
  }

  static const _unset = Object();
  CheckinProgress copyWith({
    Object? id = _unset,
    Object? userId = _unset,
    Object? checkinId = _unset,
    Object? currentQuestionIndex = _unset,
    Object? answers = _unset,
    Object? status = _unset,
    Object? createdAt = _unset,
    Object? updatedAt = _unset,
  }) {
    return CheckinProgress(
      id: id == _unset ? this.id : id as String,
      userId: userId == _unset ? this.userId : userId as String,
      checkinId: checkinId == _unset ? this.checkinId : checkinId as String,
      currentQuestionIndex: currentQuestionIndex == _unset
          ? this.currentQuestionIndex
          : currentQuestionIndex as int?,
      answers:
          answers == _unset ? this.answers : answers as Map<String, dynamic>?,
      status: status == _unset ? this.status : status as String?,
      createdAt: createdAt == _unset ? this.createdAt : createdAt as DateTime?,
      updatedAt: updatedAt == _unset ? this.updatedAt : updatedAt as DateTime?,
    );
  }
}
