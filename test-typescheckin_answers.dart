// ignore_for_file: non_constant_identifier_names, camel_case_types, file_namesimport, file_names, unnecessary_null_comparison, prefer_null_aware_operators
// WARNING: This code is auto-generated by Supadart.
// WARNING: Modifications may be overwritten. Please make changes in the Supadart configuration.
import 'supadart_header.dart';

class CheckinAnswers implements SupadartClass<CheckinAnswers> {
  final String id;
  final String? checkinId;
  final String questionId;
  final String answer;
  final DateTime answeredAt;
  final Map<String, dynamic>? metadata;
  final DateTime? createdAt;

  const CheckinAnswers({
    required this.id,
    this.checkinId,
    required this.questionId,
    required this.answer,
    required this.answeredAt,
    this.metadata,
    this.createdAt,
  });

  static String get table_name => 'checkin_answers';
  static String get c_id => 'id';
  static String get c_checkinId => 'checkin_id';
  static String get c_questionId => 'question_id';
  static String get c_answer => 'answer';
  static String get c_answeredAt => 'answered_at';
  static String get c_metadata => 'metadata';
  static String get c_createdAt => 'created_at';

  static List<CheckinAnswers> converter(List<Map<String, dynamic>> data) {
    return data.map(CheckinAnswers.fromJson).toList();
  }

  static CheckinAnswers converterSingle(Map<String, dynamic> data) {
    return CheckinAnswers.fromJson(data);
  }

  static Map<String, dynamic> _generateMap({
    String? id,
    String? checkinId,
    String? questionId,
    String? answer,
    DateTime? answeredAt,
    Map<String, dynamic>? metadata,
    DateTime? createdAt,
  }) {
    return {
      if (id != null) 'id': id,
      if (checkinId != null) 'checkin_id': checkinId,
      if (questionId != null) 'question_id': questionId,
      if (answer != null) 'answer': answer,
      if (answeredAt != null)
        'answered_at': answeredAt.toUtc().toIso8601String(),
      if (metadata != null) 'metadata': metadata,
      if (createdAt != null) 'created_at': createdAt.toUtc().toIso8601String(),
    };
  }

  static Map<String, dynamic> insert({
    String? id,
    String? checkinId,
    required String questionId,
    required String answer,
    DateTime? answeredAt,
    Map<String, dynamic>? metadata,
    DateTime? createdAt,
  }) {
    return _generateMap(
      id: id,
      checkinId: checkinId,
      questionId: questionId,
      answer: answer,
      answeredAt: answeredAt,
      metadata: metadata,
      createdAt: createdAt,
    );
  }

  static Map<String, dynamic> update({
    String? id,
    String? checkinId,
    String? questionId,
    String? answer,
    DateTime? answeredAt,
    Map<String, dynamic>? metadata,
    DateTime? createdAt,
  }) {
    return _generateMap(
      id: id,
      checkinId: checkinId,
      questionId: questionId,
      answer: answer,
      answeredAt: answeredAt,
      metadata: metadata,
      createdAt: createdAt,
    );
  }

  factory CheckinAnswers.fromJson(Map<String, dynamic> jsonn) {
    return CheckinAnswers(
      id: jsonn['id'] != null ? jsonn['id'].toString() : '',
      checkinId:
          jsonn['checkin_id'] != null ? jsonn['checkin_id'].toString() : null,
      questionId:
          jsonn['question_id'] != null ? jsonn['question_id'].toString() : '',
      answer: jsonn['answer'] != null ? jsonn['answer'].toString() : '',
      answeredAt: jsonn['answered_at'] != null
          ? DateTime.parse(jsonn['answered_at'].toString())
          : DateTime.fromMillisecondsSinceEpoch(0),
      metadata: jsonn['metadata'] != null
          ? jsonn['metadata'] as Map<String, dynamic>
          : null,
      createdAt: jsonn['created_at'] != null
          ? DateTime.parse(jsonn['created_at'].toString())
          : null,
    );
  }

  static Object New({
    String? id,
    String? checkinId,
    String? questionId,
    String? answer,
    DateTime? answeredAt,
    Map<String, dynamic>? metadata,
    DateTime? createdAt,
  }) {
    return {
      if (id != null) 'id': id,
      if (checkinId != null) 'checkin_id': checkinId,
      if (questionId != null) 'question_id': questionId,
      if (answer != null) 'answer': answer,
      if (answeredAt != null) 'answered_at': answeredAt,
      if (metadata != null) 'metadata': metadata,
      if (createdAt != null) 'created_at': createdAt,
    };
  }

  Map<String, dynamic> toJson() {
    return _generateMap(
      id: id,
      checkinId: checkinId,
      questionId: questionId,
      answer: answer,
      answeredAt: answeredAt,
      metadata: metadata,
      createdAt: createdAt,
    );
  }

  static const _unset = Object();
  CheckinAnswers copyWith({
    Object? id = _unset,
    Object? checkinId = _unset,
    Object? questionId = _unset,
    Object? answer = _unset,
    Object? answeredAt = _unset,
    Object? metadata = _unset,
    Object? createdAt = _unset,
  }) {
    return CheckinAnswers(
      id: id == _unset ? this.id : id as String,
      checkinId: checkinId == _unset ? this.checkinId : checkinId as String?,
      questionId: questionId == _unset ? this.questionId : questionId as String,
      answer: answer == _unset ? this.answer : answer as String,
      answeredAt:
          answeredAt == _unset ? this.answeredAt : answeredAt as DateTime,
      metadata: metadata == _unset
          ? this.metadata
          : metadata as Map<String, dynamic>?,
      createdAt: createdAt == _unset ? this.createdAt : createdAt as DateTime?,
    );
  }
}
