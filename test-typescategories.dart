// ignore_for_file: non_constant_identifier_names, camel_case_types, file_namesimport, file_names, unnecessary_null_comparison, prefer_null_aware_operators
// WARNING: This code is auto-generated by Supadart.
// WARNING: Modifications may be overwritten. Please make changes in the Supadart configuration.
import 'supadart_header.dart';

class Categories implements SupadartClass<Categories> {
  final String id;
  final String? parentId;
  final String name;
  final String? nameShort;
  final String? description;
  final String? icon;
  final int? sortOrder;
  final String? primaryColor;
  final String? secondaryColor;
  final bool? isActive;
  final bool? showCheckinHistory;
  final bool? checkinEnabled;
  final int? followupTimer;
  final String? promptCheckin;
  final String? promptCheckin2;
  final String? guidelinesFileText;
  final int? maxQuestions;
  final String? scope;
  final DateTime? createdAt;
  final DateTime? updatedAt;
  final String? iconUrl;
  final String? iconSecondaryUrl;
  final Map<String, dynamic>? metadata;
  final bool? followupChatEnabled;
  final String? promptFollowup;

  const Categories({
    required this.id,
    this.parentId,
    required this.name,
    this.nameShort,
    this.description,
    this.icon,
    this.sortOrder,
    this.primaryColor,
    this.secondaryColor,
    this.isActive,
    this.showCheckinHistory,
    this.checkinEnabled,
    this.followupTimer,
    this.promptCheckin,
    this.promptCheckin2,
    this.guidelinesFileText,
    this.maxQuestions,
    this.scope,
    this.createdAt,
    this.updatedAt,
    this.iconUrl,
    this.iconSecondaryUrl,
    this.metadata,
    this.followupChatEnabled,
    this.promptFollowup,
  });

  static String get table_name => 'categories';
  static String get c_id => 'id';
  static String get c_parentId => 'parent_id';
  static String get c_name => 'name';
  static String get c_nameShort => 'name_short';
  static String get c_description => 'description';
  static String get c_icon => 'icon';
  static String get c_sortOrder => 'sort_order';
  static String get c_primaryColor => 'primary_color';
  static String get c_secondaryColor => 'secondary_color';
  static String get c_isActive => 'is_active';
  static String get c_showCheckinHistory => 'show_checkin_history';
  static String get c_checkinEnabled => 'checkin_enabled';
  static String get c_followupTimer => 'followup_timer';
  static String get c_promptCheckin => 'prompt_checkin';
  static String get c_promptCheckin2 => 'prompt_checkin_2';
  static String get c_guidelinesFileText => 'guidelines_file_text';
  static String get c_maxQuestions => 'max_questions';
  static String get c_scope => 'scope';
  static String get c_createdAt => 'created_at';
  static String get c_updatedAt => 'updated_at';
  static String get c_iconUrl => 'icon_url';
  static String get c_iconSecondaryUrl => 'icon_secondary_url';
  static String get c_metadata => 'metadata';
  static String get c_followupChatEnabled => 'followup_chat_enabled';
  static String get c_promptFollowup => 'prompt_followup';

  static List<Categories> converter(List<Map<String, dynamic>> data) {
    return data.map(Categories.fromJson).toList();
  }

  static Categories converterSingle(Map<String, dynamic> data) {
    return Categories.fromJson(data);
  }

  static Map<String, dynamic> _generateMap({
    String? id,
    String? parentId,
    String? name,
    String? nameShort,
    String? description,
    String? icon,
    int? sortOrder,
    String? primaryColor,
    String? secondaryColor,
    bool? isActive,
    bool? showCheckinHistory,
    bool? checkinEnabled,
    int? followupTimer,
    String? promptCheckin,
    String? promptCheckin2,
    String? guidelinesFileText,
    int? maxQuestions,
    String? scope,
    DateTime? createdAt,
    DateTime? updatedAt,
    String? iconUrl,
    String? iconSecondaryUrl,
    Map<String, dynamic>? metadata,
    bool? followupChatEnabled,
    String? promptFollowup,
  }) {
    return {
      if (id != null) 'id': id,
      if (parentId != null) 'parent_id': parentId,
      if (name != null) 'name': name,
      if (nameShort != null) 'name_short': nameShort,
      if (description != null) 'description': description,
      if (icon != null) 'icon': icon,
      if (sortOrder != null) 'sort_order': sortOrder,
      if (primaryColor != null) 'primary_color': primaryColor,
      if (secondaryColor != null) 'secondary_color': secondaryColor,
      if (isActive != null) 'is_active': isActive,
      if (showCheckinHistory != null)
        'show_checkin_history': showCheckinHistory,
      if (checkinEnabled != null) 'checkin_enabled': checkinEnabled,
      if (followupTimer != null) 'followup_timer': followupTimer,
      if (promptCheckin != null) 'prompt_checkin': promptCheckin,
      if (promptCheckin2 != null) 'prompt_checkin_2': promptCheckin2,
      if (guidelinesFileText != null)
        'guidelines_file_text': guidelinesFileText,
      if (maxQuestions != null) 'max_questions': maxQuestions,
      if (scope != null) 'scope': scope,
      if (createdAt != null) 'created_at': createdAt.toUtc().toIso8601String(),
      if (updatedAt != null) 'updated_at': updatedAt.toUtc().toIso8601String(),
      if (iconUrl != null) 'icon_url': iconUrl,
      if (iconSecondaryUrl != null) 'icon_secondary_url': iconSecondaryUrl,
      if (metadata != null) 'metadata': metadata,
      if (followupChatEnabled != null)
        'followup_chat_enabled': followupChatEnabled,
      if (promptFollowup != null) 'prompt_followup': promptFollowup,
    };
  }

  static Map<String, dynamic> insert({
    String? id,
    String? parentId,
    required String name,
    String? nameShort,
    String? description,
    String? icon,
    int? sortOrder,
    String? primaryColor,
    String? secondaryColor,
    bool? isActive,
    bool? showCheckinHistory,
    bool? checkinEnabled,
    int? followupTimer,
    String? promptCheckin,
    String? promptCheckin2,
    String? guidelinesFileText,
    int? maxQuestions,
    String? scope,
    DateTime? createdAt,
    DateTime? updatedAt,
    String? iconUrl,
    String? iconSecondaryUrl,
    Map<String, dynamic>? metadata,
    bool? followupChatEnabled,
    String? promptFollowup,
  }) {
    return _generateMap(
      id: id,
      parentId: parentId,
      name: name,
      nameShort: nameShort,
      description: description,
      icon: icon,
      sortOrder: sortOrder,
      primaryColor: primaryColor,
      secondaryColor: secondaryColor,
      isActive: isActive,
      showCheckinHistory: showCheckinHistory,
      checkinEnabled: checkinEnabled,
      followupTimer: followupTimer,
      promptCheckin: promptCheckin,
      promptCheckin2: promptCheckin2,
      guidelinesFileText: guidelinesFileText,
      maxQuestions: maxQuestions,
      scope: scope,
      createdAt: createdAt,
      updatedAt: updatedAt,
      iconUrl: iconUrl,
      iconSecondaryUrl: iconSecondaryUrl,
      metadata: metadata,
      followupChatEnabled: followupChatEnabled,
      promptFollowup: promptFollowup,
    );
  }

  static Map<String, dynamic> update({
    String? id,
    String? parentId,
    String? name,
    String? nameShort,
    String? description,
    String? icon,
    int? sortOrder,
    String? primaryColor,
    String? secondaryColor,
    bool? isActive,
    bool? showCheckinHistory,
    bool? checkinEnabled,
    int? followupTimer,
    String? promptCheckin,
    String? promptCheckin2,
    String? guidelinesFileText,
    int? maxQuestions,
    String? scope,
    DateTime? createdAt,
    DateTime? updatedAt,
    String? iconUrl,
    String? iconSecondaryUrl,
    Map<String, dynamic>? metadata,
    bool? followupChatEnabled,
    String? promptFollowup,
  }) {
    return _generateMap(
      id: id,
      parentId: parentId,
      name: name,
      nameShort: nameShort,
      description: description,
      icon: icon,
      sortOrder: sortOrder,
      primaryColor: primaryColor,
      secondaryColor: secondaryColor,
      isActive: isActive,
      showCheckinHistory: showCheckinHistory,
      checkinEnabled: checkinEnabled,
      followupTimer: followupTimer,
      promptCheckin: promptCheckin,
      promptCheckin2: promptCheckin2,
      guidelinesFileText: guidelinesFileText,
      maxQuestions: maxQuestions,
      scope: scope,
      createdAt: createdAt,
      updatedAt: updatedAt,
      iconUrl: iconUrl,
      iconSecondaryUrl: iconSecondaryUrl,
      metadata: metadata,
      followupChatEnabled: followupChatEnabled,
      promptFollowup: promptFollowup,
    );
  }

  factory Categories.fromJson(Map<String, dynamic> jsonn) {
    return Categories(
      id: jsonn['id'] != null ? jsonn['id'].toString() : '',
      parentId:
          jsonn['parent_id'] != null ? jsonn['parent_id'].toString() : null,
      name: jsonn['name'] != null ? jsonn['name'].toString() : '',
      nameShort:
          jsonn['name_short'] != null ? jsonn['name_short'].toString() : null,
      description:
          jsonn['description'] != null ? jsonn['description'].toString() : null,
      icon: jsonn['icon'] != null ? jsonn['icon'].toString() : null,
      sortOrder: jsonn['sort_order'] != null
          ? int.parse(jsonn['sort_order'].toString())
          : null,
      primaryColor: jsonn['primary_color'] != null
          ? jsonn['primary_color'].toString()
          : null,
      secondaryColor: jsonn['secondary_color'] != null
          ? jsonn['secondary_color'].toString()
          : null,
      isActive: jsonn['is_active'] != null ? jsonn['is_active'] as bool : null,
      showCheckinHistory: jsonn['show_checkin_history'] != null
          ? jsonn['show_checkin_history'] as bool
          : null,
      checkinEnabled: jsonn['checkin_enabled'] != null
          ? jsonn['checkin_enabled'] as bool
          : null,
      followupTimer: jsonn['followup_timer'] != null
          ? int.parse(jsonn['followup_timer'].toString())
          : null,
      promptCheckin: jsonn['prompt_checkin'] != null
          ? jsonn['prompt_checkin'].toString()
          : null,
      promptCheckin2: jsonn['prompt_checkin_2'] != null
          ? jsonn['prompt_checkin_2'].toString()
          : null,
      guidelinesFileText: jsonn['guidelines_file_text'] != null
          ? jsonn['guidelines_file_text'].toString()
          : null,
      maxQuestions: jsonn['max_questions'] != null
          ? int.parse(jsonn['max_questions'].toString())
          : null,
      scope: jsonn['scope'] != null ? jsonn['scope'].toString() : null,
      createdAt: jsonn['created_at'] != null
          ? DateTime.parse(jsonn['created_at'].toString())
          : null,
      updatedAt: jsonn['updated_at'] != null
          ? DateTime.parse(jsonn['updated_at'].toString())
          : null,
      iconUrl: jsonn['icon_url'] != null ? jsonn['icon_url'].toString() : null,
      iconSecondaryUrl: jsonn['icon_secondary_url'] != null
          ? jsonn['icon_secondary_url'].toString()
          : null,
      metadata: jsonn['metadata'] != null
          ? jsonn['metadata'] as Map<String, dynamic>
          : null,
      followupChatEnabled: jsonn['followup_chat_enabled'] != null
          ? jsonn['followup_chat_enabled'] as bool
          : null,
      promptFollowup: jsonn['prompt_followup'] != null
          ? jsonn['prompt_followup'].toString()
          : null,
    );
  }

  static Object New({
    String? id,
    String? parentId,
    String? name,
    String? nameShort,
    String? description,
    String? icon,
    int? sortOrder,
    String? primaryColor,
    String? secondaryColor,
    bool? isActive,
    bool? showCheckinHistory,
    bool? checkinEnabled,
    int? followupTimer,
    String? promptCheckin,
    String? promptCheckin2,
    String? guidelinesFileText,
    int? maxQuestions,
    String? scope,
    DateTime? createdAt,
    DateTime? updatedAt,
    String? iconUrl,
    String? iconSecondaryUrl,
    Map<String, dynamic>? metadata,
    bool? followupChatEnabled,
    String? promptFollowup,
  }) {
    return {
      if (id != null) 'id': id,
      if (parentId != null) 'parent_id': parentId,
      if (name != null) 'name': name,
      if (nameShort != null) 'name_short': nameShort,
      if (description != null) 'description': description,
      if (icon != null) 'icon': icon,
      if (sortOrder != null) 'sort_order': sortOrder,
      if (primaryColor != null) 'primary_color': primaryColor,
      if (secondaryColor != null) 'secondary_color': secondaryColor,
      if (isActive != null) 'is_active': isActive,
      if (showCheckinHistory != null)
        'show_checkin_history': showCheckinHistory,
      if (checkinEnabled != null) 'checkin_enabled': checkinEnabled,
      if (followupTimer != null) 'followup_timer': followupTimer,
      if (promptCheckin != null) 'prompt_checkin': promptCheckin,
      if (promptCheckin2 != null) 'prompt_checkin_2': promptCheckin2,
      if (guidelinesFileText != null)
        'guidelines_file_text': guidelinesFileText,
      if (maxQuestions != null) 'max_questions': maxQuestions,
      if (scope != null) 'scope': scope,
      if (createdAt != null) 'created_at': createdAt,
      if (updatedAt != null) 'updated_at': updatedAt,
      if (iconUrl != null) 'icon_url': iconUrl,
      if (iconSecondaryUrl != null) 'icon_secondary_url': iconSecondaryUrl,
      if (metadata != null) 'metadata': metadata,
      if (followupChatEnabled != null)
        'followup_chat_enabled': followupChatEnabled,
      if (promptFollowup != null) 'prompt_followup': promptFollowup,
    };
  }

  Map<String, dynamic> toJson() {
    return _generateMap(
      id: id,
      parentId: parentId,
      name: name,
      nameShort: nameShort,
      description: description,
      icon: icon,
      sortOrder: sortOrder,
      primaryColor: primaryColor,
      secondaryColor: secondaryColor,
      isActive: isActive,
      showCheckinHistory: showCheckinHistory,
      checkinEnabled: checkinEnabled,
      followupTimer: followupTimer,
      promptCheckin: promptCheckin,
      promptCheckin2: promptCheckin2,
      guidelinesFileText: guidelinesFileText,
      maxQuestions: maxQuestions,
      scope: scope,
      createdAt: createdAt,
      updatedAt: updatedAt,
      iconUrl: iconUrl,
      iconSecondaryUrl: iconSecondaryUrl,
      metadata: metadata,
      followupChatEnabled: followupChatEnabled,
      promptFollowup: promptFollowup,
    );
  }

  static const _unset = Object();
  Categories copyWith({
    Object? id = _unset,
    Object? parentId = _unset,
    Object? name = _unset,
    Object? nameShort = _unset,
    Object? description = _unset,
    Object? icon = _unset,
    Object? sortOrder = _unset,
    Object? primaryColor = _unset,
    Object? secondaryColor = _unset,
    Object? isActive = _unset,
    Object? showCheckinHistory = _unset,
    Object? checkinEnabled = _unset,
    Object? followupTimer = _unset,
    Object? promptCheckin = _unset,
    Object? promptCheckin2 = _unset,
    Object? guidelinesFileText = _unset,
    Object? maxQuestions = _unset,
    Object? scope = _unset,
    Object? createdAt = _unset,
    Object? updatedAt = _unset,
    Object? iconUrl = _unset,
    Object? iconSecondaryUrl = _unset,
    Object? metadata = _unset,
    Object? followupChatEnabled = _unset,
    Object? promptFollowup = _unset,
  }) {
    return Categories(
      id: id == _unset ? this.id : id as String,
      parentId: parentId == _unset ? this.parentId : parentId as String?,
      name: name == _unset ? this.name : name as String,
      nameShort: nameShort == _unset ? this.nameShort : nameShort as String?,
      description:
          description == _unset ? this.description : description as String?,
      icon: icon == _unset ? this.icon : icon as String?,
      sortOrder: sortOrder == _unset ? this.sortOrder : sortOrder as int?,
      primaryColor:
          primaryColor == _unset ? this.primaryColor : primaryColor as String?,
      secondaryColor: secondaryColor == _unset
          ? this.secondaryColor
          : secondaryColor as String?,
      isActive: isActive == _unset ? this.isActive : isActive as bool?,
      showCheckinHistory: showCheckinHistory == _unset
          ? this.showCheckinHistory
          : showCheckinHistory as bool?,
      checkinEnabled: checkinEnabled == _unset
          ? this.checkinEnabled
          : checkinEnabled as bool?,
      followupTimer:
          followupTimer == _unset ? this.followupTimer : followupTimer as int?,
      promptCheckin: promptCheckin == _unset
          ? this.promptCheckin
          : promptCheckin as String?,
      promptCheckin2: promptCheckin2 == _unset
          ? this.promptCheckin2
          : promptCheckin2 as String?,
      guidelinesFileText: guidelinesFileText == _unset
          ? this.guidelinesFileText
          : guidelinesFileText as String?,
      maxQuestions:
          maxQuestions == _unset ? this.maxQuestions : maxQuestions as int?,
      scope: scope == _unset ? this.scope : scope as String?,
      createdAt: createdAt == _unset ? this.createdAt : createdAt as DateTime?,
      updatedAt: updatedAt == _unset ? this.updatedAt : updatedAt as DateTime?,
      iconUrl: iconUrl == _unset ? this.iconUrl : iconUrl as String?,
      iconSecondaryUrl: iconSecondaryUrl == _unset
          ? this.iconSecondaryUrl
          : iconSecondaryUrl as String?,
      metadata: metadata == _unset
          ? this.metadata
          : metadata as Map<String, dynamic>?,
      followupChatEnabled: followupChatEnabled == _unset
          ? this.followupChatEnabled
          : followupChatEnabled as bool?,
      promptFollowup: promptFollowup == _unset
          ? this.promptFollowup
          : promptFollowup as String?,
    );
  }
}
