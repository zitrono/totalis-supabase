// ignore_for_file: non_constant_identifier_names, camel_case_types, file_namesimport, file_names, unnecessary_null_comparison, prefer_null_aware_operators
// WARNING: This code is auto-generated by Supadart.
// WARNING: Modifications may be overwritten. Please make changes in the Supadart configuration.
import 'supadart_header.dart';

class AudioTranscriptions implements SupadartClass<AudioTranscriptions> {
  final String id;
  final String userId;
  final String? filename;
  final String transcription;
  final int? duration;
  final String? language;
  final DateTime? createdAt;
  final Map<String, dynamic>? metadata;

  const AudioTranscriptions({
    required this.id,
    required this.userId,
    this.filename,
    required this.transcription,
    this.duration,
    this.language,
    this.createdAt,
    this.metadata,
  });

  static String get table_name => 'audio_transcriptions';
  static String get c_id => 'id';
  static String get c_userId => 'user_id';
  static String get c_filename => 'filename';
  static String get c_transcription => 'transcription';
  static String get c_duration => 'duration';
  static String get c_language => 'language';
  static String get c_createdAt => 'created_at';
  static String get c_metadata => 'metadata';

  static List<AudioTranscriptions> converter(List<Map<String, dynamic>> data) {
    return data.map(AudioTranscriptions.fromJson).toList();
  }

  static AudioTranscriptions converterSingle(Map<String, dynamic> data) {
    return AudioTranscriptions.fromJson(data);
  }

  static Map<String, dynamic> _generateMap({
    String? id,
    String? userId,
    String? filename,
    String? transcription,
    int? duration,
    String? language,
    DateTime? createdAt,
    Map<String, dynamic>? metadata,
  }) {
    return {
      if (id != null) 'id': id,
      if (userId != null) 'user_id': userId,
      if (filename != null) 'filename': filename,
      if (transcription != null) 'transcription': transcription,
      if (duration != null) 'duration': duration,
      if (language != null) 'language': language,
      if (createdAt != null) 'created_at': createdAt.toUtc().toIso8601String(),
      if (metadata != null) 'metadata': metadata,
    };
  }

  static Map<String, dynamic> insert({
    String? id,
    required String userId,
    String? filename,
    required String transcription,
    int? duration,
    String? language,
    DateTime? createdAt,
    Map<String, dynamic>? metadata,
  }) {
    return _generateMap(
      id: id,
      userId: userId,
      filename: filename,
      transcription: transcription,
      duration: duration,
      language: language,
      createdAt: createdAt,
      metadata: metadata,
    );
  }

  static Map<String, dynamic> update({
    String? id,
    String? userId,
    String? filename,
    String? transcription,
    int? duration,
    String? language,
    DateTime? createdAt,
    Map<String, dynamic>? metadata,
  }) {
    return _generateMap(
      id: id,
      userId: userId,
      filename: filename,
      transcription: transcription,
      duration: duration,
      language: language,
      createdAt: createdAt,
      metadata: metadata,
    );
  }

  factory AudioTranscriptions.fromJson(Map<String, dynamic> jsonn) {
    return AudioTranscriptions(
      id: jsonn['id'] != null ? jsonn['id'].toString() : '',
      userId: jsonn['user_id'] != null ? jsonn['user_id'].toString() : '',
      filename: jsonn['filename'] != null ? jsonn['filename'].toString() : null,
      transcription: jsonn['transcription'] != null
          ? jsonn['transcription'].toString()
          : '',
      duration: jsonn['duration'] != null
          ? int.parse(jsonn['duration'].toString())
          : null,
      language: jsonn['language'] != null ? jsonn['language'].toString() : null,
      createdAt: jsonn['created_at'] != null
          ? DateTime.parse(jsonn['created_at'].toString())
          : null,
      metadata: jsonn['metadata'] != null
          ? jsonn['metadata'] as Map<String, dynamic>
          : null,
    );
  }

  static Object New({
    String? id,
    String? userId,
    String? filename,
    String? transcription,
    int? duration,
    String? language,
    DateTime? createdAt,
    Map<String, dynamic>? metadata,
  }) {
    return {
      if (id != null) 'id': id,
      if (userId != null) 'user_id': userId,
      if (filename != null) 'filename': filename,
      if (transcription != null) 'transcription': transcription,
      if (duration != null) 'duration': duration,
      if (language != null) 'language': language,
      if (createdAt != null) 'created_at': createdAt,
      if (metadata != null) 'metadata': metadata,
    };
  }

  Map<String, dynamic> toJson() {
    return _generateMap(
      id: id,
      userId: userId,
      filename: filename,
      transcription: transcription,
      duration: duration,
      language: language,
      createdAt: createdAt,
      metadata: metadata,
    );
  }

  static const _unset = Object();
  AudioTranscriptions copyWith({
    Object? id = _unset,
    Object? userId = _unset,
    Object? filename = _unset,
    Object? transcription = _unset,
    Object? duration = _unset,
    Object? language = _unset,
    Object? createdAt = _unset,
    Object? metadata = _unset,
  }) {
    return AudioTranscriptions(
      id: id == _unset ? this.id : id as String,
      userId: userId == _unset ? this.userId : userId as String,
      filename: filename == _unset ? this.filename : filename as String?,
      transcription: transcription == _unset
          ? this.transcription
          : transcription as String,
      duration: duration == _unset ? this.duration : duration as int?,
      language: language == _unset ? this.language : language as String?,
      createdAt: createdAt == _unset ? this.createdAt : createdAt as DateTime?,
      metadata: metadata == _unset
          ? this.metadata
          : metadata as Map<String, dynamic>?,
    );
  }
}
