// ignore_for_file: non_constant_identifier_names, camel_case_types, file_namesimport, file_names, unnecessary_null_comparison, prefer_null_aware_operators
// WARNING: This code is auto-generated by Supadart.
// WARNING: Modifications may be overwritten. Please make changes in the Supadart configuration.
import 'supadart_header.dart';

class UserDevices implements SupadartClass<UserDevices> {
  final String id;
  final String? userId;
  final String deviceToken;
  final String platform;
  final bool? isActive;
  final Map<String, dynamic>? metadata;
  final DateTime? createdAt;
  final DateTime? updatedAt;

  const UserDevices({
    required this.id,
    this.userId,
    required this.deviceToken,
    required this.platform,
    this.isActive,
    this.metadata,
    this.createdAt,
    this.updatedAt,
  });

  static String get table_name => 'user_devices';
  static String get c_id => 'id';
  static String get c_userId => 'user_id';
  static String get c_deviceToken => 'device_token';
  static String get c_platform => 'platform';
  static String get c_isActive => 'is_active';
  static String get c_metadata => 'metadata';
  static String get c_createdAt => 'created_at';
  static String get c_updatedAt => 'updated_at';

  static List<UserDevices> converter(List<Map<String, dynamic>> data) {
    return data.map(UserDevices.fromJson).toList();
  }

  static UserDevices converterSingle(Map<String, dynamic> data) {
    return UserDevices.fromJson(data);
  }

  static Map<String, dynamic> _generateMap({
    String? id,
    String? userId,
    String? deviceToken,
    String? platform,
    bool? isActive,
    Map<String, dynamic>? metadata,
    DateTime? createdAt,
    DateTime? updatedAt,
  }) {
    return {
      if (id != null) 'id': id,
      if (userId != null) 'user_id': userId,
      if (deviceToken != null) 'device_token': deviceToken,
      if (platform != null) 'platform': platform,
      if (isActive != null) 'is_active': isActive,
      if (metadata != null) 'metadata': metadata,
      if (createdAt != null) 'created_at': createdAt.toUtc().toIso8601String(),
      if (updatedAt != null) 'updated_at': updatedAt.toUtc().toIso8601String(),
    };
  }

  static Map<String, dynamic> insert({
    String? id,
    String? userId,
    required String deviceToken,
    required String platform,
    bool? isActive,
    Map<String, dynamic>? metadata,
    DateTime? createdAt,
    DateTime? updatedAt,
  }) {
    return _generateMap(
      id: id,
      userId: userId,
      deviceToken: deviceToken,
      platform: platform,
      isActive: isActive,
      metadata: metadata,
      createdAt: createdAt,
      updatedAt: updatedAt,
    );
  }

  static Map<String, dynamic> update({
    String? id,
    String? userId,
    String? deviceToken,
    String? platform,
    bool? isActive,
    Map<String, dynamic>? metadata,
    DateTime? createdAt,
    DateTime? updatedAt,
  }) {
    return _generateMap(
      id: id,
      userId: userId,
      deviceToken: deviceToken,
      platform: platform,
      isActive: isActive,
      metadata: metadata,
      createdAt: createdAt,
      updatedAt: updatedAt,
    );
  }

  factory UserDevices.fromJson(Map<String, dynamic> jsonn) {
    return UserDevices(
      id: jsonn['id'] != null ? jsonn['id'].toString() : '',
      userId: jsonn['user_id'] != null ? jsonn['user_id'].toString() : null,
      deviceToken:
          jsonn['device_token'] != null ? jsonn['device_token'].toString() : '',
      platform: jsonn['platform'] != null ? jsonn['platform'].toString() : '',
      isActive: jsonn['is_active'] != null ? jsonn['is_active'] as bool : null,
      metadata: jsonn['metadata'] != null
          ? jsonn['metadata'] as Map<String, dynamic>
          : null,
      createdAt: jsonn['created_at'] != null
          ? DateTime.parse(jsonn['created_at'].toString())
          : null,
      updatedAt: jsonn['updated_at'] != null
          ? DateTime.parse(jsonn['updated_at'].toString())
          : null,
    );
  }

  static Object New({
    String? id,
    String? userId,
    String? deviceToken,
    String? platform,
    bool? isActive,
    Map<String, dynamic>? metadata,
    DateTime? createdAt,
    DateTime? updatedAt,
  }) {
    return {
      if (id != null) 'id': id,
      if (userId != null) 'user_id': userId,
      if (deviceToken != null) 'device_token': deviceToken,
      if (platform != null) 'platform': platform,
      if (isActive != null) 'is_active': isActive,
      if (metadata != null) 'metadata': metadata,
      if (createdAt != null) 'created_at': createdAt,
      if (updatedAt != null) 'updated_at': updatedAt,
    };
  }

  Map<String, dynamic> toJson() {
    return _generateMap(
      id: id,
      userId: userId,
      deviceToken: deviceToken,
      platform: platform,
      isActive: isActive,
      metadata: metadata,
      createdAt: createdAt,
      updatedAt: updatedAt,
    );
  }

  static const _unset = Object();
  UserDevices copyWith({
    Object? id = _unset,
    Object? userId = _unset,
    Object? deviceToken = _unset,
    Object? platform = _unset,
    Object? isActive = _unset,
    Object? metadata = _unset,
    Object? createdAt = _unset,
    Object? updatedAt = _unset,
  }) {
    return UserDevices(
      id: id == _unset ? this.id : id as String,
      userId: userId == _unset ? this.userId : userId as String?,
      deviceToken:
          deviceToken == _unset ? this.deviceToken : deviceToken as String,
      platform: platform == _unset ? this.platform : platform as String,
      isActive: isActive == _unset ? this.isActive : isActive as bool?,
      metadata: metadata == _unset
          ? this.metadata
          : metadata as Map<String, dynamic>?,
      createdAt: createdAt == _unset ? this.createdAt : createdAt as DateTime?,
      updatedAt: updatedAt == _unset ? this.updatedAt : updatedAt as DateTime?,
    );
  }
}
