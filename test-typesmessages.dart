// ignore_for_file: non_constant_identifier_names, camel_case_types, file_namesimport, file_names, unnecessary_null_comparison, prefer_null_aware_operators
// WARNING: This code is auto-generated by Supadart.
// WARNING: Modifications may be overwritten. Please make changes in the Supadart configuration.
import 'supadart_header.dart';

class Messages implements SupadartClass<Messages> {
  final String id;
  final String userId;
  final String? categoryId;
  final String? parentMessageId;
  final String role;
  final String content;
  final String? contentType;
  final String? coachId;
  final Map<String, dynamic>? answerOptions;
  final Map<String, dynamic>? metadata;
  final int? tokensUsed;
  final DateTime? createdAt;
  final String? conversationId;
  final int? messageOrder;
  final String? refCategoryId;
  final String? refCheckinId;
  final String? refRecommendationId;
  final bool? isRead;
  final bool? aiProcessed;
  final int? aiResponseTimeMs;
  final String? voiceUrl;
  final int? durationSeconds;
  final String? threadId;
  final String? replyToId;
  final String? messageType;
  final bool? isEdited;
  final DateTime? editedAt;
  final DateTime? readAt;

  const Messages({
    required this.id,
    required this.userId,
    this.categoryId,
    this.parentMessageId,
    required this.role,
    required this.content,
    this.contentType,
    this.coachId,
    this.answerOptions,
    this.metadata,
    this.tokensUsed,
    this.createdAt,
    this.conversationId,
    this.messageOrder,
    this.refCategoryId,
    this.refCheckinId,
    this.refRecommendationId,
    this.isRead,
    this.aiProcessed,
    this.aiResponseTimeMs,
    this.voiceUrl,
    this.durationSeconds,
    this.threadId,
    this.replyToId,
    this.messageType,
    this.isEdited,
    this.editedAt,
    this.readAt,
  });

  static String get table_name => 'messages';
  static String get c_id => 'id';
  static String get c_userId => 'user_id';
  static String get c_categoryId => 'category_id';
  static String get c_parentMessageId => 'parent_message_id';
  static String get c_role => 'role';
  static String get c_content => 'content';
  static String get c_contentType => 'content_type';
  static String get c_coachId => 'coach_id';
  static String get c_answerOptions => 'answer_options';
  static String get c_metadata => 'metadata';
  static String get c_tokensUsed => 'tokens_used';
  static String get c_createdAt => 'created_at';
  static String get c_conversationId => 'conversation_id';
  static String get c_messageOrder => 'message_order';
  static String get c_refCategoryId => 'ref_category_id';
  static String get c_refCheckinId => 'ref_checkin_id';
  static String get c_refRecommendationId => 'ref_recommendation_id';
  static String get c_isRead => 'is_read';
  static String get c_aiProcessed => 'ai_processed';
  static String get c_aiResponseTimeMs => 'ai_response_time_ms';
  static String get c_voiceUrl => 'voice_url';
  static String get c_durationSeconds => 'duration_seconds';
  static String get c_threadId => 'thread_id';
  static String get c_replyToId => 'reply_to_id';
  static String get c_messageType => 'message_type';
  static String get c_isEdited => 'is_edited';
  static String get c_editedAt => 'edited_at';
  static String get c_readAt => 'read_at';

  static List<Messages> converter(List<Map<String, dynamic>> data) {
    return data.map(Messages.fromJson).toList();
  }

  static Messages converterSingle(Map<String, dynamic> data) {
    return Messages.fromJson(data);
  }

  static Map<String, dynamic> _generateMap({
    String? id,
    String? userId,
    String? categoryId,
    String? parentMessageId,
    String? role,
    String? content,
    String? contentType,
    String? coachId,
    Map<String, dynamic>? answerOptions,
    Map<String, dynamic>? metadata,
    int? tokensUsed,
    DateTime? createdAt,
    String? conversationId,
    int? messageOrder,
    String? refCategoryId,
    String? refCheckinId,
    String? refRecommendationId,
    bool? isRead,
    bool? aiProcessed,
    int? aiResponseTimeMs,
    String? voiceUrl,
    int? durationSeconds,
    String? threadId,
    String? replyToId,
    String? messageType,
    bool? isEdited,
    DateTime? editedAt,
    DateTime? readAt,
  }) {
    return {
      if (id != null) 'id': id,
      if (userId != null) 'user_id': userId,
      if (categoryId != null) 'category_id': categoryId,
      if (parentMessageId != null) 'parent_message_id': parentMessageId,
      if (role != null) 'role': role,
      if (content != null) 'content': content,
      if (contentType != null) 'content_type': contentType,
      if (coachId != null) 'coach_id': coachId,
      if (answerOptions != null) 'answer_options': answerOptions,
      if (metadata != null) 'metadata': metadata,
      if (tokensUsed != null) 'tokens_used': tokensUsed,
      if (createdAt != null) 'created_at': createdAt.toUtc().toIso8601String(),
      if (conversationId != null) 'conversation_id': conversationId,
      if (messageOrder != null) 'message_order': messageOrder,
      if (refCategoryId != null) 'ref_category_id': refCategoryId,
      if (refCheckinId != null) 'ref_checkin_id': refCheckinId,
      if (refRecommendationId != null)
        'ref_recommendation_id': refRecommendationId,
      if (isRead != null) 'is_read': isRead,
      if (aiProcessed != null) 'ai_processed': aiProcessed,
      if (aiResponseTimeMs != null) 'ai_response_time_ms': aiResponseTimeMs,
      if (voiceUrl != null) 'voice_url': voiceUrl,
      if (durationSeconds != null) 'duration_seconds': durationSeconds,
      if (threadId != null) 'thread_id': threadId,
      if (replyToId != null) 'reply_to_id': replyToId,
      if (messageType != null) 'message_type': messageType,
      if (isEdited != null) 'is_edited': isEdited,
      if (editedAt != null) 'edited_at': editedAt.toUtc().toIso8601String(),
      if (readAt != null) 'read_at': readAt.toUtc().toIso8601String(),
    };
  }

  static Map<String, dynamic> insert({
    String? id,
    required String userId,
    String? categoryId,
    String? parentMessageId,
    required String role,
    required String content,
    String? contentType,
    String? coachId,
    Map<String, dynamic>? answerOptions,
    Map<String, dynamic>? metadata,
    int? tokensUsed,
    DateTime? createdAt,
    String? conversationId,
    int? messageOrder,
    String? refCategoryId,
    String? refCheckinId,
    String? refRecommendationId,
    bool? isRead,
    bool? aiProcessed,
    int? aiResponseTimeMs,
    String? voiceUrl,
    int? durationSeconds,
    String? threadId,
    String? replyToId,
    String? messageType,
    bool? isEdited,
    DateTime? editedAt,
    DateTime? readAt,
  }) {
    return _generateMap(
      id: id,
      userId: userId,
      categoryId: categoryId,
      parentMessageId: parentMessageId,
      role: role,
      content: content,
      contentType: contentType,
      coachId: coachId,
      answerOptions: answerOptions,
      metadata: metadata,
      tokensUsed: tokensUsed,
      createdAt: createdAt,
      conversationId: conversationId,
      messageOrder: messageOrder,
      refCategoryId: refCategoryId,
      refCheckinId: refCheckinId,
      refRecommendationId: refRecommendationId,
      isRead: isRead,
      aiProcessed: aiProcessed,
      aiResponseTimeMs: aiResponseTimeMs,
      voiceUrl: voiceUrl,
      durationSeconds: durationSeconds,
      threadId: threadId,
      replyToId: replyToId,
      messageType: messageType,
      isEdited: isEdited,
      editedAt: editedAt,
      readAt: readAt,
    );
  }

  static Map<String, dynamic> update({
    String? id,
    String? userId,
    String? categoryId,
    String? parentMessageId,
    String? role,
    String? content,
    String? contentType,
    String? coachId,
    Map<String, dynamic>? answerOptions,
    Map<String, dynamic>? metadata,
    int? tokensUsed,
    DateTime? createdAt,
    String? conversationId,
    int? messageOrder,
    String? refCategoryId,
    String? refCheckinId,
    String? refRecommendationId,
    bool? isRead,
    bool? aiProcessed,
    int? aiResponseTimeMs,
    String? voiceUrl,
    int? durationSeconds,
    String? threadId,
    String? replyToId,
    String? messageType,
    bool? isEdited,
    DateTime? editedAt,
    DateTime? readAt,
  }) {
    return _generateMap(
      id: id,
      userId: userId,
      categoryId: categoryId,
      parentMessageId: parentMessageId,
      role: role,
      content: content,
      contentType: contentType,
      coachId: coachId,
      answerOptions: answerOptions,
      metadata: metadata,
      tokensUsed: tokensUsed,
      createdAt: createdAt,
      conversationId: conversationId,
      messageOrder: messageOrder,
      refCategoryId: refCategoryId,
      refCheckinId: refCheckinId,
      refRecommendationId: refRecommendationId,
      isRead: isRead,
      aiProcessed: aiProcessed,
      aiResponseTimeMs: aiResponseTimeMs,
      voiceUrl: voiceUrl,
      durationSeconds: durationSeconds,
      threadId: threadId,
      replyToId: replyToId,
      messageType: messageType,
      isEdited: isEdited,
      editedAt: editedAt,
      readAt: readAt,
    );
  }

  factory Messages.fromJson(Map<String, dynamic> jsonn) {
    return Messages(
      id: jsonn['id'] != null ? jsonn['id'].toString() : '',
      userId: jsonn['user_id'] != null ? jsonn['user_id'].toString() : '',
      categoryId:
          jsonn['category_id'] != null ? jsonn['category_id'].toString() : null,
      parentMessageId: jsonn['parent_message_id'] != null
          ? jsonn['parent_message_id'].toString()
          : null,
      role: jsonn['role'] != null ? jsonn['role'].toString() : '',
      content: jsonn['content'] != null ? jsonn['content'].toString() : '',
      contentType: jsonn['content_type'] != null
          ? jsonn['content_type'].toString()
          : null,
      coachId: jsonn['coach_id'] != null ? jsonn['coach_id'].toString() : null,
      answerOptions: jsonn['answer_options'] != null
          ? jsonn['answer_options'] as Map<String, dynamic>
          : null,
      metadata: jsonn['metadata'] != null
          ? jsonn['metadata'] as Map<String, dynamic>
          : null,
      tokensUsed: jsonn['tokens_used'] != null
          ? int.parse(jsonn['tokens_used'].toString())
          : null,
      createdAt: jsonn['created_at'] != null
          ? DateTime.parse(jsonn['created_at'].toString())
          : null,
      conversationId: jsonn['conversation_id'] != null
          ? jsonn['conversation_id'].toString()
          : null,
      messageOrder: jsonn['message_order'] != null
          ? int.parse(jsonn['message_order'].toString())
          : null,
      refCategoryId: jsonn['ref_category_id'] != null
          ? jsonn['ref_category_id'].toString()
          : null,
      refCheckinId: jsonn['ref_checkin_id'] != null
          ? jsonn['ref_checkin_id'].toString()
          : null,
      refRecommendationId: jsonn['ref_recommendation_id'] != null
          ? jsonn['ref_recommendation_id'].toString()
          : null,
      isRead: jsonn['is_read'] != null ? jsonn['is_read'] as bool : null,
      aiProcessed:
          jsonn['ai_processed'] != null ? jsonn['ai_processed'] as bool : null,
      aiResponseTimeMs: jsonn['ai_response_time_ms'] != null
          ? int.parse(jsonn['ai_response_time_ms'].toString())
          : null,
      voiceUrl:
          jsonn['voice_url'] != null ? jsonn['voice_url'].toString() : null,
      durationSeconds: jsonn['duration_seconds'] != null
          ? int.parse(jsonn['duration_seconds'].toString())
          : null,
      threadId:
          jsonn['thread_id'] != null ? jsonn['thread_id'].toString() : null,
      replyToId:
          jsonn['reply_to_id'] != null ? jsonn['reply_to_id'].toString() : null,
      messageType: jsonn['message_type'] != null
          ? jsonn['message_type'].toString()
          : null,
      isEdited: jsonn['is_edited'] != null ? jsonn['is_edited'] as bool : null,
      editedAt: jsonn['edited_at'] != null
          ? DateTime.parse(jsonn['edited_at'].toString())
          : null,
      readAt: jsonn['read_at'] != null
          ? DateTime.parse(jsonn['read_at'].toString())
          : null,
    );
  }

  static Object New({
    String? id,
    String? userId,
    String? categoryId,
    String? parentMessageId,
    String? role,
    String? content,
    String? contentType,
    String? coachId,
    Map<String, dynamic>? answerOptions,
    Map<String, dynamic>? metadata,
    int? tokensUsed,
    DateTime? createdAt,
    String? conversationId,
    int? messageOrder,
    String? refCategoryId,
    String? refCheckinId,
    String? refRecommendationId,
    bool? isRead,
    bool? aiProcessed,
    int? aiResponseTimeMs,
    String? voiceUrl,
    int? durationSeconds,
    String? threadId,
    String? replyToId,
    String? messageType,
    bool? isEdited,
    DateTime? editedAt,
    DateTime? readAt,
  }) {
    return {
      if (id != null) 'id': id,
      if (userId != null) 'user_id': userId,
      if (categoryId != null) 'category_id': categoryId,
      if (parentMessageId != null) 'parent_message_id': parentMessageId,
      if (role != null) 'role': role,
      if (content != null) 'content': content,
      if (contentType != null) 'content_type': contentType,
      if (coachId != null) 'coach_id': coachId,
      if (answerOptions != null) 'answer_options': answerOptions,
      if (metadata != null) 'metadata': metadata,
      if (tokensUsed != null) 'tokens_used': tokensUsed,
      if (createdAt != null) 'created_at': createdAt,
      if (conversationId != null) 'conversation_id': conversationId,
      if (messageOrder != null) 'message_order': messageOrder,
      if (refCategoryId != null) 'ref_category_id': refCategoryId,
      if (refCheckinId != null) 'ref_checkin_id': refCheckinId,
      if (refRecommendationId != null)
        'ref_recommendation_id': refRecommendationId,
      if (isRead != null) 'is_read': isRead,
      if (aiProcessed != null) 'ai_processed': aiProcessed,
      if (aiResponseTimeMs != null) 'ai_response_time_ms': aiResponseTimeMs,
      if (voiceUrl != null) 'voice_url': voiceUrl,
      if (durationSeconds != null) 'duration_seconds': durationSeconds,
      if (threadId != null) 'thread_id': threadId,
      if (replyToId != null) 'reply_to_id': replyToId,
      if (messageType != null) 'message_type': messageType,
      if (isEdited != null) 'is_edited': isEdited,
      if (editedAt != null) 'edited_at': editedAt,
      if (readAt != null) 'read_at': readAt,
    };
  }

  Map<String, dynamic> toJson() {
    return _generateMap(
      id: id,
      userId: userId,
      categoryId: categoryId,
      parentMessageId: parentMessageId,
      role: role,
      content: content,
      contentType: contentType,
      coachId: coachId,
      answerOptions: answerOptions,
      metadata: metadata,
      tokensUsed: tokensUsed,
      createdAt: createdAt,
      conversationId: conversationId,
      messageOrder: messageOrder,
      refCategoryId: refCategoryId,
      refCheckinId: refCheckinId,
      refRecommendationId: refRecommendationId,
      isRead: isRead,
      aiProcessed: aiProcessed,
      aiResponseTimeMs: aiResponseTimeMs,
      voiceUrl: voiceUrl,
      durationSeconds: durationSeconds,
      threadId: threadId,
      replyToId: replyToId,
      messageType: messageType,
      isEdited: isEdited,
      editedAt: editedAt,
      readAt: readAt,
    );
  }

  static const _unset = Object();
  Messages copyWith({
    Object? id = _unset,
    Object? userId = _unset,
    Object? categoryId = _unset,
    Object? parentMessageId = _unset,
    Object? role = _unset,
    Object? content = _unset,
    Object? contentType = _unset,
    Object? coachId = _unset,
    Object? answerOptions = _unset,
    Object? metadata = _unset,
    Object? tokensUsed = _unset,
    Object? createdAt = _unset,
    Object? conversationId = _unset,
    Object? messageOrder = _unset,
    Object? refCategoryId = _unset,
    Object? refCheckinId = _unset,
    Object? refRecommendationId = _unset,
    Object? isRead = _unset,
    Object? aiProcessed = _unset,
    Object? aiResponseTimeMs = _unset,
    Object? voiceUrl = _unset,
    Object? durationSeconds = _unset,
    Object? threadId = _unset,
    Object? replyToId = _unset,
    Object? messageType = _unset,
    Object? isEdited = _unset,
    Object? editedAt = _unset,
    Object? readAt = _unset,
  }) {
    return Messages(
      id: id == _unset ? this.id : id as String,
      userId: userId == _unset ? this.userId : userId as String,
      categoryId:
          categoryId == _unset ? this.categoryId : categoryId as String?,
      parentMessageId: parentMessageId == _unset
          ? this.parentMessageId
          : parentMessageId as String?,
      role: role == _unset ? this.role : role as String,
      content: content == _unset ? this.content : content as String,
      contentType:
          contentType == _unset ? this.contentType : contentType as String?,
      coachId: coachId == _unset ? this.coachId : coachId as String?,
      answerOptions: answerOptions == _unset
          ? this.answerOptions
          : answerOptions as Map<String, dynamic>?,
      metadata: metadata == _unset
          ? this.metadata
          : metadata as Map<String, dynamic>?,
      tokensUsed: tokensUsed == _unset ? this.tokensUsed : tokensUsed as int?,
      createdAt: createdAt == _unset ? this.createdAt : createdAt as DateTime?,
      conversationId: conversationId == _unset
          ? this.conversationId
          : conversationId as String?,
      messageOrder:
          messageOrder == _unset ? this.messageOrder : messageOrder as int?,
      refCategoryId: refCategoryId == _unset
          ? this.refCategoryId
          : refCategoryId as String?,
      refCheckinId:
          refCheckinId == _unset ? this.refCheckinId : refCheckinId as String?,
      refRecommendationId: refRecommendationId == _unset
          ? this.refRecommendationId
          : refRecommendationId as String?,
      isRead: isRead == _unset ? this.isRead : isRead as bool?,
      aiProcessed:
          aiProcessed == _unset ? this.aiProcessed : aiProcessed as bool?,
      aiResponseTimeMs: aiResponseTimeMs == _unset
          ? this.aiResponseTimeMs
          : aiResponseTimeMs as int?,
      voiceUrl: voiceUrl == _unset ? this.voiceUrl : voiceUrl as String?,
      durationSeconds: durationSeconds == _unset
          ? this.durationSeconds
          : durationSeconds as int?,
      threadId: threadId == _unset ? this.threadId : threadId as String?,
      replyToId: replyToId == _unset ? this.replyToId : replyToId as String?,
      messageType:
          messageType == _unset ? this.messageType : messageType as String?,
      isEdited: isEdited == _unset ? this.isEdited : isEdited as bool?,
      editedAt: editedAt == _unset ? this.editedAt : editedAt as DateTime?,
      readAt: readAt == _unset ? this.readAt : readAt as DateTime?,
    );
  }
}
