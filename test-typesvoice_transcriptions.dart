// ignore_for_file: non_constant_identifier_names, camel_case_types, file_namesimport, file_names, unnecessary_null_comparison, prefer_null_aware_operators
// WARNING: This code is auto-generated by Supadart.
// WARNING: Modifications may be overwritten. Please make changes in the Supadart configuration.
import 'supadart_header.dart';

class VoiceTranscriptions implements SupadartClass<VoiceTranscriptions> {
  final String id;
  final String userId;
  final String filePath;
  final int fileSize;
  final num? durationSeconds;
  final String transcription;
  final String? contextType;
  final String? contextId;
  final DateTime? createdAt;

  const VoiceTranscriptions({
    required this.id,
    required this.userId,
    required this.filePath,
    required this.fileSize,
    this.durationSeconds,
    required this.transcription,
    this.contextType,
    this.contextId,
    this.createdAt,
  });

  static String get table_name => 'voice_transcriptions';
  static String get c_id => 'id';
  static String get c_userId => 'user_id';
  static String get c_filePath => 'file_path';
  static String get c_fileSize => 'file_size';
  static String get c_durationSeconds => 'duration_seconds';
  static String get c_transcription => 'transcription';
  static String get c_contextType => 'context_type';
  static String get c_contextId => 'context_id';
  static String get c_createdAt => 'created_at';

  static List<VoiceTranscriptions> converter(List<Map<String, dynamic>> data) {
    return data.map(VoiceTranscriptions.fromJson).toList();
  }

  static VoiceTranscriptions converterSingle(Map<String, dynamic> data) {
    return VoiceTranscriptions.fromJson(data);
  }

  static Map<String, dynamic> _generateMap({
    String? id,
    String? userId,
    String? filePath,
    int? fileSize,
    num? durationSeconds,
    String? transcription,
    String? contextType,
    String? contextId,
    DateTime? createdAt,
  }) {
    return {
      if (id != null) 'id': id,
      if (userId != null) 'user_id': userId,
      if (filePath != null) 'file_path': filePath,
      if (fileSize != null) 'file_size': fileSize,
      if (durationSeconds != null)
        'duration_seconds': durationSeconds.toString(),
      if (transcription != null) 'transcription': transcription,
      if (contextType != null) 'context_type': contextType,
      if (contextId != null) 'context_id': contextId,
      if (createdAt != null) 'created_at': createdAt.toUtc().toIso8601String(),
    };
  }

  static Map<String, dynamic> insert({
    String? id,
    required String userId,
    required String filePath,
    required int fileSize,
    num? durationSeconds,
    required String transcription,
    String? contextType,
    String? contextId,
    DateTime? createdAt,
  }) {
    return _generateMap(
      id: id,
      userId: userId,
      filePath: filePath,
      fileSize: fileSize,
      durationSeconds: durationSeconds,
      transcription: transcription,
      contextType: contextType,
      contextId: contextId,
      createdAt: createdAt,
    );
  }

  static Map<String, dynamic> update({
    String? id,
    String? userId,
    String? filePath,
    int? fileSize,
    num? durationSeconds,
    String? transcription,
    String? contextType,
    String? contextId,
    DateTime? createdAt,
  }) {
    return _generateMap(
      id: id,
      userId: userId,
      filePath: filePath,
      fileSize: fileSize,
      durationSeconds: durationSeconds,
      transcription: transcription,
      contextType: contextType,
      contextId: contextId,
      createdAt: createdAt,
    );
  }

  factory VoiceTranscriptions.fromJson(Map<String, dynamic> jsonn) {
    return VoiceTranscriptions(
      id: jsonn['id'] != null ? jsonn['id'].toString() : '',
      userId: jsonn['user_id'] != null ? jsonn['user_id'].toString() : '',
      filePath: jsonn['file_path'] != null ? jsonn['file_path'].toString() : '',
      fileSize: jsonn['file_size'] != null
          ? int.parse(jsonn['file_size'].toString())
          : 0,
      durationSeconds: jsonn['duration_seconds'] != null
          ? num.parse(jsonn['duration_seconds'].toString())
          : null,
      transcription: jsonn['transcription'] != null
          ? jsonn['transcription'].toString()
          : '',
      contextType: jsonn['context_type'] != null
          ? jsonn['context_type'].toString()
          : null,
      contextId:
          jsonn['context_id'] != null ? jsonn['context_id'].toString() : null,
      createdAt: jsonn['created_at'] != null
          ? DateTime.parse(jsonn['created_at'].toString())
          : null,
    );
  }

  static Object New({
    String? id,
    String? userId,
    String? filePath,
    int? fileSize,
    num? durationSeconds,
    String? transcription,
    String? contextType,
    String? contextId,
    DateTime? createdAt,
  }) {
    return {
      if (id != null) 'id': id,
      if (userId != null) 'user_id': userId,
      if (filePath != null) 'file_path': filePath,
      if (fileSize != null) 'file_size': fileSize,
      if (durationSeconds != null) 'duration_seconds': durationSeconds,
      if (transcription != null) 'transcription': transcription,
      if (contextType != null) 'context_type': contextType,
      if (contextId != null) 'context_id': contextId,
      if (createdAt != null) 'created_at': createdAt,
    };
  }

  Map<String, dynamic> toJson() {
    return _generateMap(
      id: id,
      userId: userId,
      filePath: filePath,
      fileSize: fileSize,
      durationSeconds: durationSeconds,
      transcription: transcription,
      contextType: contextType,
      contextId: contextId,
      createdAt: createdAt,
    );
  }

  static const _unset = Object();
  VoiceTranscriptions copyWith({
    Object? id = _unset,
    Object? userId = _unset,
    Object? filePath = _unset,
    Object? fileSize = _unset,
    Object? durationSeconds = _unset,
    Object? transcription = _unset,
    Object? contextType = _unset,
    Object? contextId = _unset,
    Object? createdAt = _unset,
  }) {
    return VoiceTranscriptions(
      id: id == _unset ? this.id : id as String,
      userId: userId == _unset ? this.userId : userId as String,
      filePath: filePath == _unset ? this.filePath : filePath as String,
      fileSize: fileSize == _unset ? this.fileSize : fileSize as int,
      durationSeconds: durationSeconds == _unset
          ? this.durationSeconds
          : durationSeconds as num?,
      transcription: transcription == _unset
          ? this.transcription
          : transcription as String,
      contextType:
          contextType == _unset ? this.contextType : contextType as String?,
      contextId: contextId == _unset ? this.contextId : contextId as String?,
      createdAt: createdAt == _unset ? this.createdAt : createdAt as DateTime?,
    );
  }
}
