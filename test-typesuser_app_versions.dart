// ignore_for_file: non_constant_identifier_names, camel_case_types, file_namesimport, file_names, unnecessary_null_comparison, prefer_null_aware_operators
// WARNING: This code is auto-generated by Supadart.
// WARNING: Modifications may be overwritten. Please make changes in the Supadart configuration.
import 'supadart_header.dart';

class UserAppVersions implements SupadartClass<UserAppVersions> {
  final String id;
  final String userId;
  final String versionId;
  final String? deviceModel;
  final String? osVersion;
  final DateTime? installedAt;
  final DateTime? lastOpenedAt;

  const UserAppVersions({
    required this.id,
    required this.userId,
    required this.versionId,
    this.deviceModel,
    this.osVersion,
    this.installedAt,
    this.lastOpenedAt,
  });

  static String get table_name => 'user_app_versions';
  static String get c_id => 'id';
  static String get c_userId => 'user_id';
  static String get c_versionId => 'version_id';
  static String get c_deviceModel => 'device_model';
  static String get c_osVersion => 'os_version';
  static String get c_installedAt => 'installed_at';
  static String get c_lastOpenedAt => 'last_opened_at';

  static List<UserAppVersions> converter(List<Map<String, dynamic>> data) {
    return data.map(UserAppVersions.fromJson).toList();
  }

  static UserAppVersions converterSingle(Map<String, dynamic> data) {
    return UserAppVersions.fromJson(data);
  }

  static Map<String, dynamic> _generateMap({
    String? id,
    String? userId,
    String? versionId,
    String? deviceModel,
    String? osVersion,
    DateTime? installedAt,
    DateTime? lastOpenedAt,
  }) {
    return {
      if (id != null) 'id': id,
      if (userId != null) 'user_id': userId,
      if (versionId != null) 'version_id': versionId,
      if (deviceModel != null) 'device_model': deviceModel,
      if (osVersion != null) 'os_version': osVersion,
      if (installedAt != null)
        'installed_at': installedAt.toUtc().toIso8601String(),
      if (lastOpenedAt != null)
        'last_opened_at': lastOpenedAt.toUtc().toIso8601String(),
    };
  }

  static Map<String, dynamic> insert({
    String? id,
    required String userId,
    required String versionId,
    String? deviceModel,
    String? osVersion,
    DateTime? installedAt,
    DateTime? lastOpenedAt,
  }) {
    return _generateMap(
      id: id,
      userId: userId,
      versionId: versionId,
      deviceModel: deviceModel,
      osVersion: osVersion,
      installedAt: installedAt,
      lastOpenedAt: lastOpenedAt,
    );
  }

  static Map<String, dynamic> update({
    String? id,
    String? userId,
    String? versionId,
    String? deviceModel,
    String? osVersion,
    DateTime? installedAt,
    DateTime? lastOpenedAt,
  }) {
    return _generateMap(
      id: id,
      userId: userId,
      versionId: versionId,
      deviceModel: deviceModel,
      osVersion: osVersion,
      installedAt: installedAt,
      lastOpenedAt: lastOpenedAt,
    );
  }

  factory UserAppVersions.fromJson(Map<String, dynamic> jsonn) {
    return UserAppVersions(
      id: jsonn['id'] != null ? jsonn['id'].toString() : '',
      userId: jsonn['user_id'] != null ? jsonn['user_id'].toString() : '',
      versionId:
          jsonn['version_id'] != null ? jsonn['version_id'].toString() : '',
      deviceModel: jsonn['device_model'] != null
          ? jsonn['device_model'].toString()
          : null,
      osVersion:
          jsonn['os_version'] != null ? jsonn['os_version'].toString() : null,
      installedAt: jsonn['installed_at'] != null
          ? DateTime.parse(jsonn['installed_at'].toString())
          : null,
      lastOpenedAt: jsonn['last_opened_at'] != null
          ? DateTime.parse(jsonn['last_opened_at'].toString())
          : null,
    );
  }

  static Object New({
    String? id,
    String? userId,
    String? versionId,
    String? deviceModel,
    String? osVersion,
    DateTime? installedAt,
    DateTime? lastOpenedAt,
  }) {
    return {
      if (id != null) 'id': id,
      if (userId != null) 'user_id': userId,
      if (versionId != null) 'version_id': versionId,
      if (deviceModel != null) 'device_model': deviceModel,
      if (osVersion != null) 'os_version': osVersion,
      if (installedAt != null) 'installed_at': installedAt,
      if (lastOpenedAt != null) 'last_opened_at': lastOpenedAt,
    };
  }

  Map<String, dynamic> toJson() {
    return _generateMap(
      id: id,
      userId: userId,
      versionId: versionId,
      deviceModel: deviceModel,
      osVersion: osVersion,
      installedAt: installedAt,
      lastOpenedAt: lastOpenedAt,
    );
  }

  static const _unset = Object();
  UserAppVersions copyWith({
    Object? id = _unset,
    Object? userId = _unset,
    Object? versionId = _unset,
    Object? deviceModel = _unset,
    Object? osVersion = _unset,
    Object? installedAt = _unset,
    Object? lastOpenedAt = _unset,
  }) {
    return UserAppVersions(
      id: id == _unset ? this.id : id as String,
      userId: userId == _unset ? this.userId : userId as String,
      versionId: versionId == _unset ? this.versionId : versionId as String,
      deviceModel:
          deviceModel == _unset ? this.deviceModel : deviceModel as String?,
      osVersion: osVersion == _unset ? this.osVersion : osVersion as String?,
      installedAt:
          installedAt == _unset ? this.installedAt : installedAt as DateTime?,
      lastOpenedAt: lastOpenedAt == _unset
          ? this.lastOpenedAt
          : lastOpenedAt as DateTime?,
    );
  }
}
