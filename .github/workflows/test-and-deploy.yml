name: Test and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-edge-functions:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      
      - name: Verify Deno Installation
        run: deno --version
      
      - name: Format Check
        run: |
          cd supabase/functions
          deno fmt --check
      
      - name: Lint
        run: |
          cd supabase/functions
          deno lint
      
      - name: Run Edge Function Tests
        run: |
          cd supabase/functions
          deno run --allow-all run-tests.ts
      
      - name: Test Coverage
        run: |
          cd supabase/functions
          deno test --allow-all --coverage=coverage
          deno coverage coverage --lcov > coverage.lcov
      
      - name: Upload Coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./supabase/functions/coverage.lcov

  test-integration:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Check Test Data Volume (Pre-test)
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          ENVIRONMENT: test
        run: npm run test:monitor
      
      - name: Run Remote Integration Tests
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          ENVIRONMENT: test
          TEST_CLEANUP_STRATEGY: immediate
        run: |
          npm run test:connection
          npm run test:remote
      
      - name: Clean Test Data (Post-test)
        if: always()
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          ENVIRONMENT: test
        run: |
          npm run test:cleanup:dry
          npm run test:cleanup -- --older-than "1 hour"

  deploy:
    needs: [test-edge-functions, test-integration]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest
      
      - name: Deploy Edge Functions
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
        run: |
          supabase link --project-ref $SUPABASE_PROJECT_ID
          supabase functions deploy --no-verify-jwt
      
      - name: Deploy Database Migrations
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
        run: |
          supabase db push