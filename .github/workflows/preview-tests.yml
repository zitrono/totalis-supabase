name: Preview Environment Tests

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  test-preview:
    runs-on: ubuntu-latest
    # Only run after validation passes and give time for preview to be created
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Wait for preview environment
        run: |
          echo "‚è≥ Waiting for Supabase preview environment to be ready..."
          # Supabase GitHub integration creates preview branches automatically
          # Wait 3 minutes for it to be fully provisioned and edge functions deployed
          sleep 180

      - name: Get preview branch details
        id: preview
        run: |
          echo "üîç Getting preview branch information..."
          # The Supabase bot comments with the preview project ID
          # For now, we'll note that manual configuration is needed
          echo "‚ÑπÔ∏è  Preview branch has been created by Supabase GitHub integration"
          echo "‚ÑπÔ∏è  To run tests against preview, add these secrets to your repo:"
          echo "    - PREVIEW_SUPABASE_URL"
          echo "    - PREVIEW_SUPABASE_ANON_KEY" 
          echo "    - PREVIEW_SUPABASE_SERVICE_KEY"
          echo ""
          echo "üîó Get these values from your preview branch dashboard"

      - name: Run integration tests
        run: |
          # Check if preview secrets are configured
          if [ -n "${{ secrets.PREVIEW_SUPABASE_URL }}" ]; then
            echo "üß™ Running integration tests against preview environment..."
            export SUPABASE_URL="${{ secrets.PREVIEW_SUPABASE_URL }}"
            export SUPABASE_ANON_KEY="${{ secrets.PREVIEW_SUPABASE_ANON_KEY }}"
            export SUPABASE_SERVICE_KEY="${{ secrets.PREVIEW_SUPABASE_SERVICE_KEY }}"
          else
            echo "‚ö†Ô∏è  Preview secrets not configured, running against main project..."
            echo "‚ÑπÔ∏è  This is expected for the first PR after enabling branching"
            export SUPABASE_URL="${{ secrets.SUPABASE_URL }}"
            export SUPABASE_ANON_KEY="${{ secrets.SUPABASE_ANON_KEY }}"
            export SUPABASE_SERVICE_KEY="${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}"
          fi
          
          npm run test:integration
        env:
          ENVIRONMENT: preview
          NODE_ENV: test
          IS_PREVIEW: true

      - name: Comment test results
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const status = '${{ job.status }}' === 'success' ? '‚úÖ' : '‚ùå';
            const usingPreview = '${{ secrets.PREVIEW_SUPABASE_URL }}' !== '';
            
            let message = `${status} **Integration Tests**: ${{ job.status }}\n\n`;
            
            if (usingPreview) {
              message += `Tests ran against: Preview environment\n`;
            } else {
              message += `Tests ran against: Main project (preview secrets not configured)\n\n`;
              message += `To enable preview testing:\n`;
              message += `1. Check the Supabase bot comment above for your preview project link\n`;
              message += `2. Get API credentials from the preview project Settings ‚Üí API\n`;
              message += `3. Add these as GitHub secrets:\n`;
              message += `   - \`PREVIEW_SUPABASE_URL\`\n`;
              message += `   - \`PREVIEW_SUPABASE_ANON_KEY\`\n`;
              message += `   - \`PREVIEW_SUPABASE_SERVICE_KEY\`\n`;
            }
            
            try {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: message
              });
            } catch (error) {
              console.log('Could not post comment:', error.message);
            }