name: Preview Environment Tests

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  test-preview:
    runs-on: ubuntu-latest
    # Only run after validation passes and give time for preview to be created
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Wait for Supabase Preview to be ready
        uses: fountainhead/action-wait-for-check@v1.2.0
        id: wait-for-preview
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: 'Supabase Preview'
          ref: ${{ github.event.pull_request.head.sha }}
          timeoutSeconds: 300
          intervalSeconds: 15

      - name: Get preview branch credentials
        uses: 0xbigboss/supabase-branch-gh-action@v1.0.2
        id: supabase-branch
        with:
          supabase-access-token: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          supabase-project-id: ${{ secrets.SUPABASE_PROJECT_ID }}
          # The branch name is the PR branch name
          branch-name: ${{ github.head_ref }}

      - name: Display preview info
        run: |
          echo "üéØ Preview Environment Details:"
          echo "   API URL: ${{ steps.supabase-branch.outputs.api_url }}"
          echo "   DB Host: ${{ steps.supabase-branch.outputs.db_host }}"
          echo "   Branch: ${{ github.head_ref }}"
          echo ""
          echo "‚úÖ Preview environment is ready for testing!"

      - name: Run integration tests against preview
        run: npm run test:integration
        env:
          SUPABASE_URL: ${{ steps.supabase-branch.outputs.api_url }}
          SUPABASE_ANON_KEY: ${{ steps.supabase-branch.outputs.anon_key }}
          SUPABASE_SERVICE_KEY: ${{ steps.supabase-branch.outputs.service_role_key }}
          DATABASE_URL: postgresql://postgres:${{ steps.supabase-branch.outputs.db_pass }}@${{ steps.supabase-branch.outputs.db_host }}:${{ steps.supabase-branch.outputs.db_port }}/postgres
          ENVIRONMENT: preview
          NODE_ENV: test
          IS_PREVIEW: true

      - name: Comment test results
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const status = '${{ job.status }}' === 'success' ? '‚úÖ' : '‚ùå';
            const previewUrl = '${{ steps.supabase-branch.outputs.api_url }}';
            
            let message = `${status} **Preview Environment Tests**: ${{ job.status }}\n\n`;
            
            message += `üéØ **Tests ran against preview environment**\n`;
            message += `   Preview URL: \`${previewUrl}\`\n`;
            message += `   Branch: \`${{ github.head_ref }}\`\n\n`;
            
            if ('${{ job.status }}' === 'success') {
              message += `All integration tests passed against the preview environment! üéâ`;
            } else if ('${{ steps.wait-for-preview.outcome }}' === 'failure') {
              message += `‚ùå **Preview environment not ready**\n\n`;
              message += `The Supabase preview branch is still being created. Please wait a few minutes and re-run the workflow.`;
            } else if (!previewUrl) {
              message += `‚ùå **Could not get preview credentials**\n\n`;
              message += `Failed to retrieve preview branch credentials. Check the workflow logs for details.`;
            }
            
            try {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: message
              });
            } catch (error) {
              console.log('Could not post comment:', error.message);
            }