name: Preview Environment

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'Pull Request number to create preview for'
        required: true
        type: number
  workflow_run:
    workflows: ["Pre-Preview Validation"]
    types: [completed]
    branches: ["**"]

env:
  SUPABASE_CLI_VERSION: 2.23.4

jobs:
  check-validation:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_run'
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
      pr_number: ${{ steps.check.outputs.pr_number }}
    steps:
      - name: Check if validation passed
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            // Only proceed if the validation workflow succeeded
            if (context.payload.workflow_run.conclusion !== 'success') {
              console.log('Validation failed, skipping preview deployment');
              core.setOutput('should_run', 'false');
              return;
            }
            
            // Get PR number from the workflow run
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.payload.workflow_run.id
            });
            
            // Extract PR number from workflow run
            const pr = context.payload.workflow_run.pull_requests[0];
            if (pr) {
              core.setOutput('should_run', 'true');
              core.setOutput('pr_number', pr.number);
            } else {
              core.setOutput('should_run', 'false');
            }

  preview:
    runs-on: ubuntu-latest
    needs: [check-validation]
    if: |
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'workflow_run' && needs.check-validation.outputs.should_run == 'true')
    permissions:
      contents: read
      pull-requests: write
      
    steps:
      - name: Get PR details
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const pr_number = context.eventName === 'workflow_dispatch' 
              ? context.payload.inputs.pr_number 
              : ${{ needs.check-validation.outputs.pr_number || 0 }};
            
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: parseInt(pr_number)
            });
            
            core.setOutput('branch', pr.head.ref);
            core.setOutput('sha', pr.head.sha);
            core.setOutput('number', pr_number);
            return pr;

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.pr.outputs.sha }}

      - name: Setup Supabase CLI
        run: |
          mkdir -p /tmp/supabase-cli
          cd /tmp/supabase-cli
          wget -qO- https://github.com/supabase/cli/releases/download/v${SUPABASE_CLI_VERSION}/supabase_linux_amd64.tar.gz | tar xvz
          sudo mv supabase /usr/local/bin/
          supabase --version

      - name: Authenticate Supabase CLI
        run: |
          supabase login --token ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          supabase link --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}

      - name: Run migrations
        run: |
          # For now, skip preview branches until properly configured
          echo "Running migrations on main project (preview branches coming soon)..."
          supabase db push --password ${{ secrets.SUPABASE_DB_PASSWORD }}

      - name: Seed preview database
        run: |
          supabase db seed

      - name: Deploy Edge Functions
        run: |
          # Deploy all edge functions with --use-api flag
          for function_dir in supabase/functions/*/; do
            if [ -d "$function_dir" ] && [ -f "$function_dir/index.ts" ]; then
              function_name=$(basename "$function_dir")
              echo "Deploying function: $function_name"
              supabase functions deploy "$function_name" \
                --use-api \
                --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}
            fi
          done
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}

      - name: Push storage configuration
        run: |
          # Note: supabase config push is not available in v2.23.4
          # Will be available in future versions
          echo "Storage config sync will be available in future CLI versions"

      - name: Run integration tests
        run: |
          echo "‚ö†Ô∏è  Integration tests temporarily disabled for preview environment"
          echo "Tests require proper preview branch setup which is pending"
          # npm ci
          # npm run test:integration
        env:
          SUPABASE_URL: ${{ vars.PREVIEW_SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ vars.PREVIEW_SUPABASE_ANON_KEY }}
          ENVIRONMENT: preview

      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const previewUrl = process.env.PREVIEW_URL || 'Preview environment created';
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üöÄ **Preview Environment Ready**\n\n${previewUrl}\n\nThis environment will be automatically deleted 20 hours after this PR is closed or merged.`
            });

      - name: Label PR if keep-alive requested
        if: contains(github.event.pull_request.labels.*.name, 'keep-preview')
        run: echo "Preview environment will be retained for 7 days"